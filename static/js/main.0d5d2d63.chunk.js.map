{"version":3,"sources":["App.styled.ts","styles/theme.ts","components/NavBar/NavBar.styled.ts","images/logo.png","styles/globalStyles.ts","components/NavBar/NavBar.tsx","components/SearchBar/SearchBar.styled.ts","Context/context.ts","components/SearchBar/SearchBar.tsx","components/CryptoTable/CryptoTable.styled.ts","components/CryptoTable/CryptoTable.tsx","pages/Home/Home.tsx","Context/createMarketCoinsContext.ts","Context/createNameCoinsContext.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppContainer","styled","div","theme","color","primary","primary_bright","secondary","NavBarBigContainer","header","NavBarContainer","Wrapper","Logo","img","AppName","h1","MenuBtn","button","GlobalStyle","createGlobalStyle","Container","Button","big","fontBig","NavBar","src","logo","alt","SearchInput","input","SearchIcon","ImSearch","marketCoinsDefaultValues","marketCoins","setMarketCoins","fetchMarketCoins","isLoading","MarketCoinsContext","createContext","nameCoinsDefaultValues","nameCoins","setNameCoins","fetchNameCoins","NameCoinsContext","SearchBar","useContext","list","placeholder","type","id","map","coin","value","name","symbol","HeaderText","h2","Table","table","TableHeadRow","thead","tr","TableHeadData","th","align","TableBodyRow","CoinNameWrapper","span","TableBodyData","td","change","Ticker","CoinImg","Loading","p","CryptoTable","useEffect","length","index","image","current_price","toLocaleString","price_change_percentage_24h","toFixed","market_cap","total_volume","Home","CreateMarketCoinsContext","useState","setIsLoading","useCallback","a","axios","get","res","data","console","error","CreateNameCoinsContext","App","marketCoinsContextValues","getMarketCoinsContext","nameCoinsContextValues","getNameCoinsContext","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d5d2d63.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: #000000;\n  min-height: 100vh;\n  width: 100vw;\n`;\n","const theme = {\n  color: {\n    primary: \"#14deb5\",\n    primary_bright: \"#40EDC9\",\n    secondary: \"#ae19d4\",\n  },\n};\n\nexport default theme;\n","import styled from \"styled-components\";\nimport theme from \"../../styles/theme\";\n\nexport const NavBarBigContainer = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  border-bottom: 1px solid #466e64;\n`;\nexport const NavBarContainer = styled.header`\n  max-width: 1300px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  height: 60px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0 10px;\n  cursor: pointer;\n`;\n\nexport const Logo = styled.img`\n  width: 40px;\n  height: 40px;\n  margin-right: 10px;\n`;\n\nexport const AppName = styled.h1`\n  font-family: \"Zen Dots\", cursive;\n  font-size: 17px;\n  color: ${theme.color.primary};\n  font-weight: 400;\n`;\n\ninterface MenuBtnProps {\n  primary?: boolean;\n}\n\nexport const MenuBtn = styled.button<MenuBtnProps>`\n  background: transparent;\n  border: none;\n  text-decoration: none;\n  white-space: nowrap;\n  padding: 10px 20px;\n  font-size: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: bold;\n  color: ${({ primary }) => (primary ? theme.color.primary : \"#fff\")};\n\n  &:hover {\n    transition: all 0.3s ease-out;\n    background-color: ${({ primary }) =>\n      primary ? \"#3d3d3d\" : theme.color.secondary};\n    color: ${({ primary }) => (primary ? theme.color.primary_bright : \"#fff\")};\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/logo.8eb4d0f4.png\";","import styled, { createGlobalStyle } from \"styled-components\";\nimport theme from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    /* font-family: \"Hammersmith One\", sans-serif; */\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n    outline-color: #4a4a4a;\n}\n`;\n\nexport const Container = styled.div`\n  width: 90%;\n  max-width: 1300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\ninterface ButtonProps {\n  primary?: boolean;\n  big?: boolean;\n  fontBig?: boolean;\n}\n\nexport const Button = styled.button<ButtonProps>`\n  border-radius: 4px;\n  background: ${({ primary }) =>\n    primary ? theme.color.primary : theme.color.secondary};\n  padding: ${({ big }) => (big ? \"12px 64px\" : \"10px 20px\")};\n  color: #000;\n  font-size: ${({ fontBig }) => (fontBig ? \"20px\" : \"16px\")};\n  border: none;\n  white-space: nowrap;\n  cursor: pointer;\n  font-weight: bold;\n\n  &:hover {\n    transition: all 0.3s ease-out;\n    color: #fff;\n    background: ${({ primary }) =>\n      primary ? theme.color.secondary : theme.color.primary};\n  }\n\n  @media screen and (max-width: 960px) {\n    width: 100%;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport {\n  NavBarBigContainer,\n  NavBarContainer,\n  Wrapper,\n  Logo,\n  AppName,\n  MenuBtn,\n} from \"./NavBar.styled\";\nimport logo from \"../../images/logo.png\";\nimport { Button } from \"../../styles/globalStyles\";\n\nconst NavBar: React.FC = () => {\n  return (\n    <NavBarBigContainer>\n      <NavBarContainer>\n        <Wrapper>\n          <Logo src={logo} alt=\"img\" />\n          <AppName>Crypto Folio</AppName>\n        </Wrapper>\n        <Wrapper>\n          <MenuBtn>Market</MenuBtn>\n          {/* <MenuBtn>Trending</MenuBtn> */}\n          <MenuBtn>Watchlist</MenuBtn>\n          <MenuBtn>Portfolio</MenuBtn>\n        </Wrapper>\n        <Wrapper>\n          <MenuBtn primary>Log In</MenuBtn>\n          <Button primary>Sign Up</Button>\n        </Wrapper>\n      </NavBarContainer>\n    </NavBarBigContainer>\n  );\n};\n\nexport default NavBar;\n","import styled from \"styled-components\";\nimport theme from \"../../styles/theme\";\nimport { ImSearch } from \"react-icons/im\";\n\nexport const SearchBarContainer = styled.div`\n  display: flex;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0 15px;\n  margin-top: 50px;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 10px 20px;\n  width: 350px;\n  background: #404040;\n  color: ${theme.color.primary_bright};\n  border: none;\n  border-radius: 40px;\n  box-shadow: 0 0 3px 0 #ddd;\n  -moz-outline-radius: 40px;\n  color: #fff;\n  &::placeholder {\n    color: #d1d1d1;\n  }\n`;\n\nexport const SearchIcon = styled(ImSearch)`\n  color: #d1d1d1;\n  font-size: 20px;\n`;\n\nexport const SearchBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  padding: 8px 10px;\n  position: relative;\n  left: -50px;\n\n  &:hover {\n    background: #222;\n  }\n  &:hover ${SearchIcon} {\n    color: ${theme.color.primary};\n  }\n`;\n","import { createContext } from \"react\";\nimport { MarketCoinsContextData, NameCoinsContextData } from \"../Types/context\";\n\n// MarketCoins Context\nconst marketCoinsDefaultValues = {\n  marketCoins: [],\n  setMarketCoins: () => null,\n  fetchMarketCoins: () => null,\n  isLoading: true,\n};\n\nexport const MarketCoinsContext = createContext<MarketCoinsContextData>(\n  marketCoinsDefaultValues\n);\n\n// NameCoins Context\nconst nameCoinsDefaultValues = {\n  nameCoins: [],\n  setNameCoins: () => null,\n  fetchNameCoins: () => null,\n  isLoading: true,\n};\n\nexport const NameCoinsContext = createContext<NameCoinsContextData>(\n  nameCoinsDefaultValues\n);\n","import { useContext } from \"react\";\nimport { Wrapper, SearchInput } from \"./SearchBar.styled\";\nimport { MarketCoinsContext } from \"../../Context/context\";\n\nconst SearchBar: React.FC = () => {\n  const { marketCoins } = useContext(MarketCoinsContext);\n\n  return (\n    <Wrapper>\n      <SearchInput list=\"browsers\" placeholder=\"Search\" type=\"text\" />{\" \"}\n      <datalist id=\"browsers\">\n        {marketCoins.map((coin) => (\n          <option key={coin.id} value={`${coin.name} (${coin.symbol})`} />\n        ))}\n      </datalist>\n    </Wrapper>\n  );\n};\n\nexport default SearchBar;\n","import styled from \"styled-components\";\nimport theme from \"../../styles/theme\";\n\ninterface TableHeadDataProps {\n  align: string;\n}\ninterface TableBodyDataProps {\n  align: string;\n  change?: string;\n}\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: 30px;\n`;\n\nexport const HeaderText = styled.h2`\n  font-size: 30px;\n  color: #fff;\n`;\n\nexport const Table = styled.table`\n  border-collapse: collapse;\n  margin: 25px 0;\n  min-width: 400px;\n`;\n\nexport const TableHead = styled.thead``;\n\nexport const TableHeadRow = styled.tr`\n  background-color: #222;\n  border-bottom: solid 1px #777;\n`;\n\nexport const TableHeadData = styled.th<TableHeadDataProps>`\n  color: #ccc;\n  text-align: ${({ align }) => align};\n  padding: 15px 30px;\n`;\n\nexport const TableBodyRow = styled.tr`\n  &:hover {\n    background-color: #222;\n  }\n`;\n\nexport const CoinNameWrapper = styled.span`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TableBodyData = styled.td<TableBodyDataProps>`\n  text-align: ${({ align }) => align};\n  padding: 25px 30px;\n  border-bottom: solid 1px #777;\n  color: ${({ change }) =>\n    change === \"positive\"\n      ? \"#26c761\"\n      : change === \"negative\"\n      ? \"#ff7a7a\"\n      : \"#fff\"};\n  cursor: pointer;\n`;\n\nexport const Ticker = styled.span`\n  color: #aaa;\n  font-size: 14px;\n  margin-left: 5px;\n  text-transform: uppercase;\n`;\n\nexport const CoinImg = styled.img`\n  width: 25px;\n  margin-right: 15px;\n`;\n\nexport const Loading = styled.p`\n  color: #fff;\n  font-size: 25px;\n  margin-top: 50px;\n`;\n","import { useEffect, useContext } from \"react\";\nimport { MarketCoinsContext } from \"../../Context/context\";\nimport {\n  Wrapper,\n  HeaderText,\n  Table,\n  TableHeadRow,\n  TableHeadData,\n  TableBodyRow,\n  TableBodyData,\n  Ticker,\n  CoinImg,\n  CoinNameWrapper,\n  Loading,\n} from \"./CryptoTable.styled\";\n\nconst CryptoTable = () => {\n  const { marketCoins, fetchMarketCoins } = useContext(MarketCoinsContext);\n\n  useEffect(() => {\n    fetchMarketCoins();\n  }, []);\n\n  if (marketCoins.length === 0) return <Loading>Loading...</Loading>;\n  return (\n    <Wrapper>\n      <HeaderText>Crypto Market Monitor</HeaderText>\n      <Table>\n        <thead>\n          <TableHeadRow>\n            <TableHeadData align=\"center\">Rank</TableHeadData>\n            <TableHeadData align=\"left\">Name</TableHeadData>\n            <TableHeadData align=\"right\">Price</TableHeadData>\n            <TableHeadData align=\"right\">24h %</TableHeadData>\n            <TableHeadData align=\"right\">Market Cap</TableHeadData>\n            <TableHeadData align=\"right\">Volume(24h)</TableHeadData>\n          </TableHeadRow>\n        </thead>\n        <tbody>\n          {marketCoins.map((coin, index) => (\n            <TableBodyRow key={coin.id}>\n              <TableBodyData align=\"center\">{index + 1}</TableBodyData>\n              <TableBodyData align=\"left\">\n                <CoinNameWrapper>\n                  <CoinImg src={coin.image} alt={coin.name} />\n                  {coin.name} <Ticker>{coin.symbol}</Ticker>\n                </CoinNameWrapper>\n              </TableBodyData>\n              <TableBodyData align=\"right\">\n                ${coin.current_price.toLocaleString()}\n              </TableBodyData>\n              <TableBodyData\n                align=\"right\"\n                change={\n                  coin.price_change_percentage_24h > 0\n                    ? \"positive\"\n                    : coin.price_change_percentage_24h < 0\n                    ? \"negative\"\n                    : \"\"\n                }\n              >\n                {coin.price_change_percentage_24h.toFixed(2)}%\n              </TableBodyData>\n              <TableBodyData align=\"right\">\n                ${coin.market_cap.toLocaleString()}\n              </TableBodyData>\n              <TableBodyData align=\"right\">\n                ${coin.total_volume.toLocaleString()}\n              </TableBodyData>\n            </TableBodyRow>\n          ))}\n        </tbody>\n      </Table>\n    </Wrapper>\n  );\n};\n\nexport default CryptoTable;\n","import SearchBar from \"../../components/SearchBar\";\nimport CryptoTable from \"../../components/CryptoTable\";\nimport { Container } from \"../../styles/globalStyles\";\nconst Home = () => {\n  return (\n    <Container>\n      <SearchBar />\n      <CryptoTable />\n    </Container>\n  );\n};\n\nexport default Home;\n","import { useState, useCallback } from \"react\";\nimport { MarketCoin } from \"../Types/coins\";\nimport axios from \"axios\";\n\nconst CreateMarketCoinsContext = () => {\n  const [marketCoins, setMarketCoins] = useState<MarketCoin[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const fetchMarketCoins = useCallback(async () => {\n    try {\n      const res = await axios.get(\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=200&page=1&sparkline=false\"\n      );\n      setMarketCoins(res.data);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(error);\n      setIsLoading(false);\n    }\n  }, [setMarketCoins]);\n\n  return { marketCoins, setMarketCoins, isLoading, fetchMarketCoins };\n};\nexport default CreateMarketCoinsContext;\n","import { useState, useCallback } from \"react\";\nimport { NameCoin } from \"../Types/coins\";\nimport axios from \"axios\";\n\nconst CreateNameCoinsContext = () => {\n  const [nameCoins, setNameCoins] = useState<NameCoin[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const fetchNameCoins = useCallback(async () => {\n    try {\n      const res = await axios.get(\n        \"https://api.coingecko.com/api/v3/coins/list\"\n      );\n      setNameCoins(res.data);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(error);\n      setIsLoading(false);\n    }\n  }, [setNameCoins]);\n\n  return { nameCoins, setNameCoins, isLoading, fetchNameCoins };\n};\nexport default CreateNameCoinsContext;\n","import { AppContainer } from \"./App.styled\";\nimport NavBar from \"./components/NavBar\";\nimport GlobalStyle from \"./styles/globalStyles\";\nimport Home from \"./pages/Home/Home\";\nimport getMarketCoinsContext from \"./Context/createMarketCoinsContext\";\nimport getNameCoinsContext from \"./Context/createNameCoinsContext\";\nimport { MarketCoinsContext, NameCoinsContext } from \"./Context/context\";\n\nconst App: React.FC = () => {\n  const marketCoinsContextValues = getMarketCoinsContext();\n  const nameCoinsContextValues = getNameCoinsContext();\n\n  return (\n    <MarketCoinsContext.Provider value={marketCoinsContextValues}>\n      <NameCoinsContext.Provider value={nameCoinsContextValues}>\n        <AppContainer>\n          <GlobalStyle />\n          <NavBar />\n          <Home />\n        </AppContainer>\n      </NameCoinsContext.Provider>\n    </MarketCoinsContext.Provider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}