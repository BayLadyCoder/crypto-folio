{"version":3,"sources":["App.styled.ts","styles/theme.ts","components/NavBar/NavBar.styled.ts","images/logo.png","components/NavBar/NavBar.tsx","styles/globalStyles.ts","context/MarketCoins/MarketCoinsContext.tsx","components/CryptoTable/CryptoTableName.styled.ts","components/CryptoTable/CryptoTableName.tsx","components/CryptoTable/CryptoTable.styled.ts","components/CryptoTable/CryptoTable.tsx","pages/Home/Home.tsx","utils/helpers.ts","context/contextHelpers.ts","context/WatchList/WatchListContext.tsx","components/EachWatchList/EachWatchList.styled.ts","components/WatchListForm/WatchListForm.styled.ts","components/form_components/TextFieldWithLabel/TextFieldWithLabel.tsx","components/form_components/SearchCoinTextField/SearchCoinInputTextField.tsx","components/WatchListForm/WatchListForm.tsx","components/EachWatchList/EachWatchList.tsx","pages/WatchList/WatchList.tsx","components/EachPortfolio/EachPortfolio.styled.ts","components/PortfolioForm/PortfolioForm.styled.ts","context/Portfolio/PortfolioContext.tsx","components/PortfolioForm/AddNewCoinForm/AddNewCoinForm.styled.ts","components/PortfolioForm/AddNewCoinForm/AddNewCoinForm.tsx","components/PortfolioForm/EditPortfolioForm/EditPortfolioForm.tsx","components/PortfolioForm/PortfolioForm.tsx","components/PortfolioTable/PortfolioTable.tsx","components/EachPortfolio/EachPortfolio.tsx","pages/Portfolio/Portfolio.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppContainer","styled","div","theme","color","primary","primary_bright","secondary","NavBarBigContainer","header","NavBarContainer","Wrapper","LogoAppNameLink","Link","Logo","img","AppName","h1","MenuBtn","NavBar","location","useLocation","console","log","to","src","logo","alt","GlobalStyle","createGlobalStyle","Container","alignCenter","HeaderWrapper","big","fontBig","PageTitle","marginBottom","Button","button","small","Loading","p","InputContainer","Label","label","TextField","input","TableName","h2","marketCoinsDefaultValues","marketCoins","setMarketCoins","fetchMarketCoins","Error","isLoading","MarketCoinsContext","createContext","MarketCoinsProvider","children","useState","setIsLoading","useCallback","a","length","axios","get","res","data","error","Provider","value","CryptoTableName","tableName","style","width","Table","table","TableHeadRow","thead","tr","TableHeadData","th","align","TableBodyRow","CoinNameWrapper","span","TableBodyData","td","change","Ticker","CoinImg","CryptoTable","coins","history","useHistory","cellSpacing","cellPadding","map","coin","onClick","coinId","id","push","market_cap_rank","image","name","symbol","current_price","toLocaleString","price_change_percentage_24h","toFixed","market_cap","total_volume","Home","useContext","useEffect","getCoinSymbol","coinNameWithSymbol","includes","validateCoinNameWithSymbol","split","toLowerCase","isValidatedValue","coinOptions","coinSymbol","find","removeCoinFromCoinOptions","setCoinOptions","prev","filter","addCoinToCoinOptions","fullCoin","getDataFromLocalStorage","key","localStorage","getItem","JSON","parse","watchListDefaultValues","watchListFormOpen","onClickOpenForm","onClickCloseForm","watchList","watchListName","updateWatchListName","addNewCoinToWatchList","removeCoinFromWatchList","createCoinOptions","getWatchList","WatchListContext","useWatchList","WatchListProvider","setWatchListFormOpen","setWatchList","setWatchListName","newWatchListName","oldWatchListName","existingData","setItem","stringify","removeItem","inputValue","setInputValue","newCoin","stored_data","addCoinToLocalStorage","alert","removeCoinFromLocalStorage","options","toRemoveIndices","i","forEach","index","sort","splice","createOptionsFromWatchListData","watchListNameFromStorage","dataFromLocalStorage","WatchListContainer","Form","form","FormLeftContainer","FormRightContainer","FormTitle","CoinsContainer","CoinName","DeleteCoinIcon","HiOutlineX","DeleteCoinBtn","Coin","CloseFormButton","VscChromeClose","CloseFormButtonLeft","FormHeaderContainer","WatchListNameWrapper","EditWatchListNameButton","AiFillEdit","InputTextField","placeholder","handleChange","htmlFor","type","onChange","required","SearchCoinInputTextField","hasLabel","list","toUpperCase","WatchListForm","thisWatchListName","setThisWatchListName","watchListNameInputOpen","setWatchListNameInputOpen","getCoins","onCloseForm","aria-label","e","target","preventDefault","marginLeft","fontSize","onClickSaveWatchListName","onClickDeleteCoin","WatchList","WatchListPage","getMarketCoins","EachWatchList","PortfolioContainer","FormContainer","TopContainer","PortfolioNameContainer","PortfolioName","EditIconButton","AddDetailsForm","h3","TableHead","TableBody","tbody","RemoveCoinIconButton","RiDeleteBin5Line","TableRow","portfolioDefaultValues","portfolioFormOpen","onClickOpenPortfolioForm","onClickClosePortfolioForm","portfolioName","updatePortfolioName","portfolioCoins","addNewCoinToPortfolio","portfolioCoinOptions","createPortfolioCoinOptions","updatePortfolioCoins","PortfolioContext","usePortfolio","PortfolioProvider","setPortfolioFormOpen","setPortfolioName","setPortfolioCoins","setPortfolioCoinOptions","newName","name_with_symbol","myCoin","bought_price_per_coin","bought_quantity","gainUSD","gainPercentage","currentValue","total_gain_usd","total_gain_percentage","current_value","updatedCoins","BottomContainer","AddNewCoinForm","setFormStep","cost_basis","portfolioData","setPortfolioData","updatePortfolioData","TextFieldWithLabel","Number","EditPortfolioForm","isFormValid","setIsFormValid","formData","setFormData","onChangeFormData","minValue","prevIsFormValid","newIsFormValid","prevFormData","updatedCoin","display","justifyContent","alignItems","border","min","PortfolioForm","formStep","newPortfolioName","setNewPortfolioName","portfolioNameFormOpen","setPortfolioNameFormOpen","PortfolioTable","substring","EachPortfolio","hasCoinInPortfolio","Portfolio","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.318eb8d8.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: #000000;\n  min-height: 100vh;\n  width: 100vw;\n`;\n","const theme = {\n  color: {\n    primary: \"#14deb5\",\n    primary_bright: \"#40EDC9\",\n    secondary: \"#ae19d4\",\n  },\n};\n\nexport default theme;\n","import styled from \"styled-components\";\nimport theme from \"../../styles/theme\";\nimport { Link } from \"react-router-dom\";\n\nexport const NavBarBigContainer = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  border-bottom: 1px solid #466e64;\n`;\nexport const NavBarContainer = styled.header`\n  max-width: 1300px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 80%;\n  height: 60px;\n\n  @media screen and (max-width: 1200px) {\n    width: 90%;\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 100%;\n    padding: 0 10px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0px;\n  cursor: pointer;\n`;\n\nexport const LogoAppNameLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  padding: 0px;\n  cursor: pointer;\n  text-decoration: none;\n`;\n\nexport const Logo = styled.img`\n  width: 40px;\n  height: 40px;\n  margin-right: 10px;\n`;\n\nexport const AppName = styled.h1`\n  font-family: \"Zen Dots\", cursive;\n  font-size: 17px;\n  color: ${theme.color.primary};\n  font-weight: 400;\n`;\n\ninterface MenuBtnProps {\n  primary?: string;\n}\n\nexport const MenuBtn = styled(Link)<MenuBtnProps>`\n  background: transparent;\n  text-decoration: none;\n  white-space: nowrap;\n  padding: 10px 20px;\n  font-size: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: 500;\n  border: 1px solid transparent;\n  margin-right: 10px;\n  color: ${({ primary }) =>\n    primary === \"true\" ? theme.color.primary : \"#fff\"};\n\n  &:hover {\n    transition: all 0.3s ease-out;\n    /* border: 1px solid ${theme.color.primary_bright}; */\n    color: ${({ primary }) =>\n      primary === \"true\" ? theme.color.primary_bright : \"#ffd52e\"};\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/logo.8eb4d0f4.png\";","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  NavBarBigContainer,\n  NavBarContainer,\n  Wrapper,\n  LogoAppNameLink,\n  Logo,\n  AppName,\n  MenuBtn,\n} from './NavBar.styled';\nimport logo from '../../images/logo.png';\nimport { ButtonLink } from '../../styles/globalStyles';\n\nconst NavBar: React.FC = () => {\n  const location = useLocation();\n  console.log(location);\n  return (\n    <NavBarBigContainer>\n      <NavBarContainer>\n        <LogoAppNameLink to='/crypto-folio'>\n          <Logo src={logo} alt='img' />\n          <AppName>Crypto Folio</AppName>\n        </LogoAppNameLink>\n        <Wrapper>\n          <MenuBtn to='/crypto-folio'>Market</MenuBtn>\n          {/* <MenuBtn>Trending</MenuBtn> */}\n          <MenuBtn to='/crypto-folio/watchlist'>Watch List</MenuBtn>\n          <MenuBtn to='/crypto-folio/portfolio'>Portfolio</MenuBtn>\n        </Wrapper>\n        {/* <Wrapper>\n          <ButtonLink to=\"/crypto-folio/login\">LOG IN</ButtonLink>\n          <ButtonLink to=\"/crypto-folio/sign-up\" primary=\"true\">\n            Sign Up\n          </ButtonLink>\n        </Wrapper> */}\n      </NavBarContainer>\n    </NavBarBigContainer>\n  );\n};\n\nexport default NavBar;\n","import styled, { createGlobalStyle } from 'styled-components';\nimport theme from './theme';\nimport { Link } from 'react-router-dom';\n\nconst GlobalStyle = createGlobalStyle`\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    /* font-family: \"Hammersmith One\", sans-serif; */\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n    outline-color: #4a4a4a;\n}\n`;\n\ninterface ContainerProps {\n  alignCenter?: boolean;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  width: 80%;\n  max-width: 1300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: ${({ alignCenter }) =>\n    alignCenter ? 'center' : 'flex-start'};\n\n  @media screen and (max-width: 1200px) {\n    width: 90%;\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 100%;\n    padding: 0 10px;\n  }\n`;\n\ninterface ButtonProps {\n  primary?: string;\n  big?: boolean;\n  fontBig?: boolean;\n}\n\nexport const ButtonLink = styled(Link)<ButtonProps>`\n  border-radius: 4px;\n  background: ${({ primary }) =>\n    primary === 'true' ? theme.color.secondary : 'transparent'};\n  padding: ${({ big }) => (big ? '12px 64px' : '10px 20px')};\n  color: ${({ primary }) =>\n    primary === 'true' ? '#fff' : theme.color.primary};\n  font-size: ${({ fontBig }) => (fontBig ? '20px' : '16px')};\n  white-space: nowrap;\n  cursor: pointer;\n  font-weight: 500;\n  border: 1px solid transparent;\n  border-color: ${({ primary }) =>\n    primary === 'true' ? theme.color.secondary : 'transparent'};\n\n  text-decoration: none;\n  text-transform: uppercase;\n  margin-left: 10px;\n\n  &:hover {\n    transition: all 0.3s ease-out;\n    color: ${({ primary }) =>\n      primary === 'true' ? '#fff' : theme.color.primary_bright};\n    background: ${({ primary }) =>\n      primary === 'true' ? '#cc00ff' : 'transparent'};\n\n    border-color: ${({ primary }) =>\n      primary === 'true' ? '#444' : theme.color.primary_bright};\n  }\n\n  @media screen and (max-width: 960px) {\n    width: 100%;\n  }\n`;\n\nexport const HeaderWrapper = styled.div`\n  width: 100%;\n  margin-top: 30px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\ninterface PageTitleProps {\n  marginBottom?: boolean;\n}\n\nexport const PageTitle = styled.h1<PageTitleProps>`\n  font-size: 30px;\n  margin-top: 30px;\n  margin-bottom: ${({ marginBottom }) => (marginBottom ? '20px' : '0px')};\n  color: #fff;\n  @media screen and (max-width: 960px) {\n    font-size: 25px;\n  }\n`;\n\ninterface ButtonProps {\n  primary?: string;\n  small?: boolean;\n  big?: boolean;\n  fontBig?: boolean;\n}\nexport const Button = styled.button<ButtonProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  background: ${({ primary }) =>\n    primary === 'true' ? theme.color.primary_bright : 'transparent'};\n  padding: ${({ big, small }) =>\n    big ? '12px 64px' : small ? '8px 8px' : '10px 20px'};\n  color: ${({ primary }) =>\n    primary === 'true' ? '#000' : theme.color.primary};\n  font-size: ${({ fontBig, small }) =>\n    fontBig ? '20px' : small ? '14px' : '16px'};\n  border: 1px solid transparent;\n  white-space: nowrap;\n  cursor: pointer;\n  font-weight: 500;\n  text-decoration: none;\n  text-transform: uppercase;\n\n  &:hover {\n    transition: all 0.2s linear;\n    color: ${({ primary }) =>\n      primary === 'true' ? '#000' : theme.color.primary_bright};\n    border-color: ${({ primary }) =>\n      primary === 'true' ? '#21b598' : theme.color.primary_bright};\n    background: ${({ primary }) =>\n      primary === 'true' ? theme.color.primary : 'transparent'};\n  }\n\n  @media screen and (max-width: 960px) {\n    padding: ${({ big }) => (big ? '10px 50px' : '7px 14px')};\n    font-size: ${({ fontBig }) => (fontBig ? '18px' : '16px')};\n  }\n\n  @media screen and (max-width: 550px) {\n    padding: ${({ big }) => (big ? '8px 40px' : '5px 10px')};\n  }\n`;\n\nexport const Loading = styled.p`\n  color: #fff;\n  font-size: 25px;\n  margin-top: 50px;\n`;\n\nexport const InputContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n  padding: 5px 0px;\n  font-size: 15px;\n`;\n\nexport const TextField = styled.input`\n  padding: 10px;\n  width: 100%;\n  border: none;\n`;\n\nexport const TableName = styled.h2`\n  font-size: 25px;\n  color: #fff;\n  @media screen and (max-width: 960px) {\n    font-size: 20px;\n  }\n`;\n\nexport default GlobalStyle;\n","import { useState, useCallback, createContext, useContext } from 'react';\nimport { MarketCoin } from '../../types/coins';\nimport axios from 'axios';\nimport { MarketCoinsContextData } from '../../types/context';\n\nconst marketCoinsDefaultValues = {\n  marketCoins: [],\n  setMarketCoins: () => null,\n  fetchMarketCoins: () => {\n    throw new Error('Context is not available');\n  },\n  isLoading: false,\n};\nexport const MarketCoinsContext = createContext<MarketCoinsContextData>(\n  marketCoinsDefaultValues\n);\nexport const useMarketCoins = () => {\n  return useContext(MarketCoinsContext);\n};\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const MarketCoinsProvider: React.FC<Props> = ({ children }) => {\n  const [marketCoins, setMarketCoins] = useState<MarketCoin[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const fetchMarketCoins = useCallback(async () => {\n    if (marketCoins.length > 0) {\n      return marketCoins;\n    }\n\n    try {\n      setIsLoading(true);\n\n      const res = await axios.get(\n        'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false'\n      );\n      setMarketCoins(res.data);\n      setIsLoading(false);\n      return res.data;\n    } catch (error) {\n      console.error(error);\n      setIsLoading(false);\n    }\n  }, [marketCoins.length]);\n\n  return (\n    <MarketCoinsContext.Provider\n      value={{\n        marketCoins,\n        setMarketCoins,\n        isLoading,\n        fetchMarketCoins,\n      }}\n    >\n      {children}\n    </MarketCoinsContext.Provider>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const TableName = styled.h2`\n  font-size: 25px;\n  color: #fff;\n  @media screen and (max-width: 960px) {\n    font-size: 20px;\n  }\n`;\n","import React from \"react\";\nimport { TableName } from \"./CryptoTableName.styled\";\nimport { HeaderWrapper } from \"../../styles/globalStyles\";\ninterface Props {\n  tableName: string;\n}\nconst CryptoTableName: React.FC<Props> = ({ tableName }) => {\n  return (\n    <div style={{ width: \"100%\" }}>\n      <HeaderWrapper>\n        <TableName>{tableName}</TableName>\n      </HeaderWrapper>\n    </div>\n  );\n};\n\nexport default CryptoTableName;\n","import styled from \"styled-components\";\n\ninterface TableHeadDataProps {\n  align: string;\n}\ninterface TableBodyDataProps {\n  align: string;\n  change?: string;\n}\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  overflow-x: scroll;\n\n  @media screen and (min-width: 960px) {\n    overflow-x: visible;\n  }\n`;\n\nexport const Table = styled.table`\n  margin: 25px 0;\n`;\n\nexport const TableHead = styled.thead``;\n\nexport const TableHeadRow = styled.tr`\n  background-color: #222;\n  border-bottom: solid 1px #777;\n`;\n\nexport const TableHeadData = styled.th<TableHeadDataProps>`\n  color: #ddd;\n  text-align: ${({ align }) => align};\n  padding: 15px 10px;\n  font-weight: 500;\n  font-size: 15px;\n`;\n\nexport const TableBodyRow = styled.tr`\n  &:hover {\n    background-color: #222;\n  }\n`;\n\nexport const CoinNameWrapper = styled.span`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TableBodyData = styled.td<TableBodyDataProps>`\n  text-align: ${({ align }) => align};\n  padding: 20px 10px;\n  border-bottom: solid 1px #777;\n  color: ${({ change }) =>\n    change === \"positive\"\n      ? \"#26c761\"\n      : change === \"negative\"\n      ? \"#ff7a7a\"\n      : \"#fff\"};\n  cursor: pointer;\n`;\n\nexport const Ticker = styled.span`\n  color: #aaa;\n  font-size: 14px;\n  margin-left: 5px;\n  text-transform: uppercase;\n`;\n\nexport const CoinImg = styled.img`\n  width: 25px;\n  margin-right: 15px;\n`;\n","import {\n  Wrapper,\n  Table,\n  TableHeadRow,\n  TableHeadData,\n  TableBodyRow,\n  TableBodyData,\n  Ticker,\n  CoinImg,\n  CoinNameWrapper,\n} from './CryptoTable.styled';\nimport { MarketCoin } from '../../types/coins';\nimport { Link, useHistory } from 'react-router-dom';\n\ninterface Props {\n  coins: MarketCoin[];\n}\n\nconst CryptoTable: React.FC<Props> = ({ coins }) => {\n  const history = useHistory();\n\n  // todo: create each coin page for more detail and chart for each coin price history\n  const handleRowClick = (coinId: string) => {\n    history.push(`/use-cases/${coinId}`);\n  };\n\n  return (\n    <Wrapper>\n      <Table cellSpacing='0' cellPadding='0'>\n        <thead>\n          <TableHeadRow>\n            <TableHeadData align='center'>Rank</TableHeadData>\n            <TableHeadData align='left'>Name</TableHeadData>\n            <TableHeadData align='right'>Price</TableHeadData>\n            <TableHeadData align='right'>24h %</TableHeadData>\n            <TableHeadData align='right'>Market Cap</TableHeadData>\n            <TableHeadData align='right'>Volume(24h)</TableHeadData>\n          </TableHeadRow>\n        </thead>\n        <tbody>\n          {coins.map((coin) => (\n            <TableBodyRow key={coin.id} onClick={() => handleRowClick(coin.id)}>\n              <TableBodyData align='center'>\n                {coin.market_cap_rank}\n              </TableBodyData>\n              <TableBodyData align='left'>\n                <CoinNameWrapper>\n                  <CoinImg src={coin.image} alt={coin.name} />\n                  {coin.name} <Ticker>{coin.symbol}</Ticker>\n                </CoinNameWrapper>\n              </TableBodyData>\n              <TableBodyData align='right'>\n                ${coin.current_price.toLocaleString()}\n              </TableBodyData>\n              <TableBodyData\n                align='right'\n                change={\n                  coin.price_change_percentage_24h > 0\n                    ? 'positive'\n                    : coin.price_change_percentage_24h < 0\n                    ? 'negative'\n                    : ''\n                }\n              >\n                {coin.price_change_percentage_24h.toFixed(2)}%\n              </TableBodyData>\n              <TableBodyData align='right'>\n                ${coin.market_cap.toLocaleString()}\n              </TableBodyData>\n              <TableBodyData align='right'>\n                ${coin.total_volume.toLocaleString()}\n              </TableBodyData>\n            </TableBodyRow>\n          ))}\n        </tbody>\n      </Table>\n    </Wrapper>\n  );\n};\n\nexport default CryptoTable;\n","import { useEffect, useContext } from 'react';\nimport { MarketCoinsContext } from '../../context/MarketCoins/MarketCoinsContext';\nimport SearchBar from '../../components/SearchBar';\nimport { CryptoTable, CryptoTableName } from '../../components/CryptoTable';\n\nimport { Container, Loading, PageTitle } from '../../styles/globalStyles';\nconst Home = () => {\n  const { marketCoins, fetchMarketCoins } = useContext(MarketCoinsContext);\n  useEffect(() => {\n    if (marketCoins.length === 0) {\n      fetchMarketCoins();\n    }\n  }, []);\n\n  if (marketCoins.length === 0) return <Loading>Loading...</Loading>;\n\n  return (\n    <Container>\n      <PageTitle>Market</PageTitle>\n      {/* <SearchBar /> */}\n      <CryptoTableName tableName='Crypto Market Monitor' />\n      <CryptoTable coins={marketCoins} />\n    </Container>\n  );\n};\n\nexport default Home;\n","import { MarketCoin } from \"../types/coins\";\n\nexport const getCoinNameAndSymbol = (coin: MarketCoin) => {\n  return `${coin.name} (${coin.symbol.toUpperCase()})`;\n};\n\nexport const getCoinNameAndSymbolArray = (marketCoins: MarketCoin[]) => {\n  const options = marketCoins.map((coin: MarketCoin) => {\n    return `${coin.name} (${coin.symbol.toUpperCase()})`;\n  });\n\n  return options;\n};\n\nconst validateCoinNameWithSymbol = (coinNameWithSymbol: string) => {\n  if (!coinNameWithSymbol.includes(\"(\")) return false;\n  if (!coinNameWithSymbol.includes(\")\")) return false;\n  if (coinNameWithSymbol.length < 4) return false;\n\n  return true;\n};\n\nexport const getCoinSymbol = (coinNameWithSymbol: string) => {\n  if (validateCoinNameWithSymbol(coinNameWithSymbol)) {\n    return coinNameWithSymbol.split(\"(\")[1].split(\")\")[0].toLowerCase();\n  } else {\n    return \"Invalid coin\";\n  }\n};\n","import { Dispatch, SetStateAction } from 'react';\nimport { MarketCoin } from '../types/coins';\n\nexport const isValidatedValue = (\n  coinOptions: MarketCoin[],\n  coinSymbol: string\n) => {\n  const isInOptions = coinOptions.find((coin) => coin.symbol === coinSymbol);\n  if (isInOptions) return true;\n\n  return false;\n};\n\nexport const removeCoinFromCoinOptions = (\n  coinSymbol: string,\n  setCoinOptions: Dispatch<SetStateAction<MarketCoin[]>>\n) => {\n  setCoinOptions((prev) => {\n    const coinNames = prev.filter((coin) => coin.symbol !== coinSymbol);\n    return coinNames;\n  });\n};\n\nexport const addCoinToCoinOptions = (\n  marketCoins: MarketCoin[],\n  setCoinOptions: Dispatch<SetStateAction<MarketCoin[]>>,\n  coinSymbol: string\n) => {\n  const fullCoin = marketCoins.filter((coin) => coin.symbol === coinSymbol)[0];\n  setCoinOptions((prev) => [fullCoin, ...prev]);\n};\n\nexport const addCoinToLocalStorage = (key: string, coinSymbol: string) => {\n  if (localStorage.getItem(key) !== null) {\n    let stored_data = JSON.parse(localStorage[key]) || [];\n    localStorage[key] = JSON.stringify([...stored_data, coinSymbol]);\n  } else {\n    localStorage[key] = JSON.stringify([coinSymbol]);\n  }\n};\n\nexport const removeCoinFromLocalStorage = (key: string, coinSymbol: string) => {\n  if (localStorage.getItem(key) !== null) {\n    let stored_data = JSON.parse(localStorage[key]);\n    localStorage[key] = JSON.stringify(\n      stored_data.filter((coin: string) => coin !== coinSymbol)\n    );\n  }\n};\n\nexport const getDataFromLocalStorage = (key: string) => {\n  if (localStorage.getItem(key) !== null) {\n    let stored_data = JSON.parse(localStorage[key]);\n    return stored_data;\n  } else {\n    return null;\n  }\n};\n\nexport const createOptionsFromWatchListData = (\n  marketCoins: MarketCoin[],\n  watchList: MarketCoin[]\n) => {\n  const options: MarketCoin[] = [...marketCoins];\n\n  const toRemoveIndices: number[] = [];\n  for (let i = 0; i < watchList.length; i++) {\n    marketCoins.forEach((coin, index) => {\n      if (coin.symbol === watchList[i].symbol) toRemoveIndices.push(index);\n    });\n  }\n  toRemoveIndices.sort();\n  for (let i = toRemoveIndices.length - 1; i >= 0; i--) {\n    const index: number = toRemoveIndices[i];\n    options.splice(index, 1);\n  }\n  return options;\n};\n","import {\n  useState,\n  useContext,\n  createContext,\n  Dispatch,\n  SetStateAction,\n} from \"react\";\nimport { MarketCoin } from \"../../types/coins\";\nimport { WatchListContextData } from \"../../types/context\";\nimport { getCoinSymbol } from \"../../utils/helpers\";\nimport {\n  removeCoinFromCoinOptions,\n  addCoinToCoinOptions,\n  isValidatedValue,\n  addCoinToLocalStorage,\n  removeCoinFromLocalStorage,\n  getDataFromLocalStorage,\n  createOptionsFromWatchListData,\n} from \"../contextHelpers\";\n\nconst watchListDefaultValues = {\n  watchListFormOpen: false,\n  onClickOpenForm: () => null,\n  onClickCloseForm: () => null,\n  watchList: [],\n  watchListName: \"\",\n  updateWatchListName: () => null,\n  addNewCoinToWatchList: () => null,\n  removeCoinFromWatchList: () => null,\n  coinOptions: [],\n  createCoinOptions: () => null,\n  getWatchList: () => null,\n};\n\nexport const WatchListContext = createContext<WatchListContextData>(\n  watchListDefaultValues\n);\n\nexport const useWatchList = () => {\n  return useContext(WatchListContext);\n};\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const WatchListProvider: React.FC<Props> = ({ children }) => {\n  const [watchListFormOpen, setWatchListFormOpen] = useState<boolean>(false);\n  const [watchList, setWatchList] = useState<MarketCoin[]>([]);\n  const [watchListName, setWatchListName] = useState<string>(\n    localStorage.getItem(\"watchListName\") || \"My Watchlist\"\n  );\n  const [coinOptions, setCoinOptions] = useState<MarketCoin[]>([]);\n\n  const onClickOpenForm = () => {\n    setWatchListFormOpen(true);\n  };\n  const onClickCloseForm = () => {\n    setWatchListFormOpen(false);\n  };\n\n  const updateWatchListName = (newWatchListName: string) => {\n    const oldWatchListName = watchListName;\n    const existingData = getDataFromLocalStorage(oldWatchListName);\n\n    // update watchListName in local storage\n    localStorage.setItem(\"watchListName\", newWatchListName);\n    // add new watchListName to local storage with existing data from old name\n    localStorage[newWatchListName] = JSON.stringify(existingData);\n    // remove old watchListName key and its value in local storage\n    localStorage.removeItem(oldWatchListName);\n\n    setWatchListName(newWatchListName);\n  };\n\n  const addNewCoinToWatchList = (\n    marketCoins: MarketCoin[],\n    coinOptions: MarketCoin[],\n    inputValue: string,\n    setInputValue: Dispatch<SetStateAction<string>>\n  ) => {\n    const coinSymbol = getCoinSymbol(inputValue);\n\n    if (isValidatedValue(coinOptions, coinSymbol)) {\n      removeCoinFromCoinOptions(coinSymbol, setCoinOptions);\n      const newCoin = marketCoins.filter(\n        (coin) => coin.symbol === coinSymbol\n      )[0];\n      addCoinToLocalStorage(watchListName, coinSymbol);\n      setWatchList((prev) => [...prev, newCoin]);\n    } else {\n      alert(\"This coin is not supported currently. Please try again.\");\n    }\n    setInputValue(\"\");\n  };\n\n  const removeCoinFromWatchList = (\n    coinSymbol: string,\n    marketCoins: MarketCoin[]\n  ) => {\n    removeCoinFromLocalStorage(watchListName, coinSymbol);\n    setWatchList((prev) => prev.filter((coin) => coin.symbol !== coinSymbol));\n    addCoinToCoinOptions(marketCoins, setCoinOptions, coinSymbol);\n  };\n\n  const createCoinOptions = (marketCoins: MarketCoin[]) => {\n    if (watchList.length > 0) {\n      const options = createOptionsFromWatchListData(marketCoins, watchList);\n      setCoinOptions(options);\n    } else {\n      setCoinOptions(marketCoins);\n    }\n  };\n\n  const getWatchList = (marketCoins: MarketCoin[]) => {\n    let watchListNameFromStorage = localStorage.getItem(\"watchListName\");\n    if (!watchListNameFromStorage) {\n      localStorage.setItem(\"watchListName\", watchListName);\n      watchListNameFromStorage = watchListName;\n    }\n\n    const data = getDataFromLocalStorage(watchListNameFromStorage);\n\n    if (data && data.length > 0) {\n      let dataFromLocalStorage: MarketCoin[] = [];\n\n      for (let i = 0; i < data.length; i++) {\n        marketCoins.forEach((coin) => {\n          if (coin.symbol === data[i]) dataFromLocalStorage.push(coin);\n        });\n      }\n\n      setWatchList(dataFromLocalStorage);\n    }\n  };\n  return (\n    <WatchListContext.Provider\n      value={{\n        watchListFormOpen,\n        onClickOpenForm,\n        onClickCloseForm,\n        watchListName,\n        updateWatchListName,\n        watchList,\n        addNewCoinToWatchList,\n        removeCoinFromWatchList,\n        coinOptions,\n        createCoinOptions,\n        getWatchList,\n      }}\n    >\n      {children}\n    </WatchListContext.Provider>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const WatchListContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import styled from \"styled-components\";\nimport { HiOutlineX } from \"react-icons/hi\";\nimport { VscChromeClose } from \"react-icons/vsc\";\nimport { AiFillEdit } from \"react-icons/ai\";\n\nexport const Form = styled.form`\n  width: 950px;\n  display: flex;\n  justify-content: center;\n  background-color: #fff;\n  border-radius: 10px;\n  border: 1px solid #fff;\n\n  @media screen and (max-width: 960px) {\n    flex-direction: column;\n    width: 450px;\n  }\n  @media screen and (max-width: 550px) {\n    flex-direction: column;\n    width: 330px;\n  }\n`;\n\nexport const FormLeftContainer = styled.div`\n  width: 30%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  background: #555;\n  padding: 10px 20px 20px 20px;\n  border-top-left-radius: 10px;\n  border-bottom-left-radius: 10px;\n  @media screen and (max-width: 960px) {\n    width: 100%;\n    border-bottom-left-radius: 0px;\n  }\n`;\nexport const FormRightContainer = styled.div`\n  width: 70%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  background: #444;\n  padding: 10px 20px 20px 20px;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  @media screen and (max-width: 960px) {\n    width: 100%;\n    border-top-right-radius: 0px;\n  }\n`;\n\nexport const FormTitle = styled.h2`\n  font-size: 20px;\n  color: #fff;\n  padding: 10px;\n`;\n\n// export const AddCoinsInput = styled.input`\n//   width: 100%;\n//   padding: 5px 10px;\n//   margin-bottom: 10px;\n// `;\n\nexport const CoinsContainer = styled.div`\n  background-color: #222;\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  min-height: 120px;\n  max-height: 450px;\n  width: 100%;\n  border: 1px solid #aaa;\n  padding: 10px 0px 0px 10px;\n  overflow-y: scroll;\n`;\n\nexport const CoinName = styled.p`\n  cursor: default;\n`;\n\nexport const DeleteCoinIcon = styled(HiOutlineX)`\n  font-size: 18px;\n  width: 15px;\n  height: 15px;\n  background: #ddd;\n  font-weight: 700;\n  border-radius: 50%;\n`;\nexport const DeleteCoinBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 10px;\n  padding: 4px;\n  border-radius: 50%;\n  background-color: #ddd;\n  cursor: pointer;\n  border: 1px solid transparent;\n\n  &:hover {\n    background: #db1d1d !important;\n    color: #fff;\n    border: 1px solid #fff;\n\n    ${DeleteCoinIcon} {\n      background: #db1d1d !important;\n    }\n  }\n`;\n\nexport const Coin = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #524101;\n  padding: 8px 12px;\n  border-radius: 20px;\n  border: 2px solid #bbb;\n  color: #eee;\n  margin-bottom: 10px;\n  margin-right: 10px;\n\n  &:hover {\n    background-color: #786001;\n    color: #fff;\n    border: 2px solid #fff;\n\n    ${DeleteCoinBtn},${DeleteCoinIcon} {\n      background: #ffcc00;\n    }\n  }\n`;\n\nexport const CloseFormButton = styled(VscChromeClose)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  padding: 10px;\n  background: transparent;\n  border-radius: 50%;\n  cursor: pointer;\n  color: #fff;\n  font-size: 40px;\n\n  &:hover {\n    transition: all 0.2s linear;\n    background-color: #223;\n  }\n  @media screen and (max-width: 960px) {\n    display: none;\n  }\n`;\nexport const CloseFormButtonLeft = styled(VscChromeClose)`\n  display: none;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  padding: 10px;\n  background: transparent;\n  border-radius: 50%;\n  cursor: pointer;\n  color: #fff;\n  font-size: 40px;\n\n  &:hover {\n    transition: all 0.2s linear;\n    background-color: #223;\n  }\n  @media screen and (max-width: 960px) {\n    display: flex;\n  }\n`;\n\nexport const FormHeaderContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 5px;\n`;\n\nexport const WatchListNameWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\nexport const EditWatchListNameButton = styled(AiFillEdit)`\n  color: #fff;\n  padding: 10px;\n  cursor: pointer;\n  font-size: 40px;\n  border-radius: 50%;\n\n  &:hover {\n    background: #223;\n  }\n`;\n","import React from \"react\";\nimport { InputContainer, Label, TextField } from \"../../../styles/globalStyles\";\n\ninterface Props {\n  label: string;\n  name: string;\n  placeholder: string;\n  value: number | string;\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst InputTextField: React.FC<Props> = ({\n  label,\n  name,\n  placeholder,\n  value,\n  handleChange,\n}) => {\n  return (\n    <InputContainer>\n      <Label htmlFor={name}>{label}</Label>\n      <TextField\n        type=\"text\"\n        name={name}\n        placeholder={placeholder}\n        value={value || \"\"}\n        onChange={handleChange}\n        required\n      />\n    </InputContainer>\n  );\n};\n\nexport default InputTextField;\n","import React from 'react';\nimport { InputContainer, Label, TextField } from '../../../styles/globalStyles';\nimport { MarketCoin } from '../../../types/coins';\n\ninterface Props {\n  width?: string;\n  value: string;\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  coins: MarketCoin[];\n  name: string;\n  hasLabel?: boolean;\n}\nconst SearchCoinInputTextField: React.FC<Props> = ({\n  value,\n  name,\n  handleChange,\n  coins,\n  hasLabel,\n}) => {\n  return (\n    <InputContainer>\n      {hasLabel && <Label htmlFor='coins'>Crypto Currencies</Label>}\n      <TextField\n        type='search'\n        list='coins'\n        placeholder='Search'\n        name={name}\n        value={value}\n        onChange={handleChange}\n      />\n      <datalist id='coins'>\n        {coins.map((coin) => (\n          <option\n            key={coin.id}\n            value={`${coin.name} (${coin.symbol.toUpperCase()})`}\n          />\n        ))}\n      </datalist>\n    </InputContainer>\n  );\n};\n\nexport default SearchCoinInputTextField;\n","import { useContext, useEffect, useState } from 'react';\nimport { MarketCoinsContext } from '../../context/MarketCoins/MarketCoinsContext';\nimport { Container, Loading } from '../../styles/globalStyles';\nimport {\n  Form,\n  FormLeftContainer,\n  FormRightContainer,\n  FormTitle,\n  CoinsContainer,\n  Coin,\n  CoinName,\n  DeleteCoinBtn,\n  DeleteCoinIcon,\n  CloseFormButtonLeft,\n  CloseFormButton,\n  FormHeaderContainer,\n  WatchListNameWrapper,\n  EditWatchListNameButton,\n} from './WatchListForm.styled';\nimport { Button } from '../../styles/globalStyles';\nimport { MarketCoin } from '../../types/coins';\nimport { useWatchList } from '../../context/WatchList/WatchListContext';\nimport { AiOutlineRight } from 'react-icons/ai';\nimport { SearchCoinTextField } from '../form_components';\ninterface Props {\n  watchListName: string;\n  updateWatchListName: (newName: string) => void;\n}\nconst WatchListForm: React.FC<Props> = ({\n  watchListName,\n  updateWatchListName,\n}) => {\n  const {\n    watchList,\n    onClickCloseForm,\n    addNewCoinToWatchList,\n    removeCoinFromWatchList,\n    coinOptions,\n    createCoinOptions,\n  } = useWatchList();\n\n  const [inputValue, setInputValue] = useState<string>('');\n\n  const [thisWatchListName, setThisWatchListName] =\n    useState<string>(watchListName);\n  const [watchListNameInputOpen, setWatchListNameInputOpen] =\n    useState<boolean>(false);\n  const { marketCoins, fetchMarketCoins } = useContext(MarketCoinsContext);\n\n  useEffect(() => {\n    const getCoins = async () => {\n      const coins = await fetchMarketCoins();\n      createCoinOptions(coins);\n    };\n\n    if (marketCoins.length === 0) getCoins();\n  }, []);\n\n  useEffect(() => {\n    if (marketCoins.length > 0 && coinOptions.length === 0)\n      createCoinOptions(marketCoins);\n  }, [marketCoins, coinOptions.length, createCoinOptions]);\n\n  const onAddCoin = (e: React.MouseEvent) => {\n    e.preventDefault();\n    addNewCoinToWatchList(marketCoins, coinOptions, inputValue, setInputValue);\n  };\n\n  const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const onCloseForm = () => {\n    onClickCloseForm();\n  };\n\n  const onClickDeleteCoin = (e: React.MouseEvent, coinSymbol: string) => {\n    e.preventDefault();\n    removeCoinFromWatchList(coinSymbol, marketCoins);\n  };\n\n  const onChangeWatchListName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setThisWatchListName(e.target.value);\n  };\n  const onClickSaveWatchListName = (e: React.MouseEvent) => {\n    e.preventDefault();\n    updateWatchListName(thisWatchListName);\n    setWatchListNameInputOpen(false);\n  };\n\n  if (marketCoins.length === 0 || coinOptions.length === 0)\n    return <Loading>Loading...</Loading>;\n\n  return (\n    <Container alignCenter>\n      <Form>\n        <FormLeftContainer>\n          <FormHeaderContainer>\n            <FormTitle>Add Coins</FormTitle>\n            <CloseFormButtonLeft\n              type='button'\n              aria-label='Close Form'\n              onClick={onCloseForm}\n            >\n              X\n            </CloseFormButtonLeft>\n          </FormHeaderContainer>\n          <SearchCoinTextField\n            value={inputValue}\n            name='coins'\n            handleChange={onChangeInput}\n            coins={coinOptions}\n          />\n\n          <Button primary='true' onClick={onAddCoin}>\n            ADD TO WATCHLIST{' '}\n            <AiOutlineRight style={{ marginLeft: '5px', fontSize: '20px' }} />\n          </Button>\n        </FormLeftContainer>\n        <FormRightContainer>\n          <FormHeaderContainer>\n            <WatchListNameWrapper>\n              {watchListNameInputOpen ? (\n                <>\n                  <input\n                    type='text'\n                    value={thisWatchListName}\n                    onChange={onChangeWatchListName}\n                  />\n                  <button onClick={(e) => onClickSaveWatchListName(e)}>\n                    save\n                  </button>{' '}\n                </>\n              ) : (\n                <>\n                  <FormTitle>{thisWatchListName}</FormTitle>\n                  <EditWatchListNameButton\n                    type='button'\n                    aria-label='Edit Watchlist Name'\n                    onClick={() => setWatchListNameInputOpen(true)}\n                  />\n                </>\n              )}\n            </WatchListNameWrapper>\n            <CloseFormButton\n              type='button'\n              aria-label='Close Form'\n              onClick={onCloseForm}\n            />\n          </FormHeaderContainer>\n          <CoinsContainer>\n            {watchList.map((coin: MarketCoin) => (\n              <Coin key={coin.id}>\n                <CoinName>{`${\n                  coin.name\n                } (${coin.symbol.toUpperCase()})`}</CoinName>\n                <DeleteCoinBtn\n                  onClick={(e) => onClickDeleteCoin(e, coin.symbol)}\n                >\n                  <DeleteCoinIcon />\n                </DeleteCoinBtn>\n              </Coin>\n            ))}\n          </CoinsContainer>\n        </FormRightContainer>\n      </Form>\n    </Container>\n  );\n};\n\nexport default WatchListForm;\n","import React from \"react\";\nimport { MarketCoin } from \"../../types/coins\";\nimport { WatchListContainer } from \"./EachWatchList.styled\";\nimport { HeaderWrapper, Button, TableName } from \"../../styles/globalStyles\";\nimport WatchListForm from \"../WatchListForm\";\nimport { CryptoTable } from \"../CryptoTable\";\n\ninterface Props {\n  coins: MarketCoin[];\n  watchListFormOpen: boolean;\n  onClickOpenForm: () => void;\n  watchListName: string;\n  updateWatchListName: (newName: string) => void;\n}\n\nconst WatchList: React.FC<Props> = ({\n  coins,\n  watchListFormOpen,\n  onClickOpenForm,\n  watchListName,\n  updateWatchListName,\n}) => {\n  return (\n    <WatchListContainer>\n      <HeaderWrapper>\n        <TableName>{watchListName}</TableName>\n        {!watchListFormOpen && (\n          <Button onClick={onClickOpenForm}>+ADD COINS</Button>\n        )}\n      </HeaderWrapper>\n      {watchListFormOpen && (\n        <WatchListForm\n          watchListName={watchListName}\n          updateWatchListName={updateWatchListName}\n        />\n      )}\n\n      {coins.length > 0 && !watchListFormOpen && <CryptoTable coins={coins} />}\n    </WatchListContainer>\n  );\n};\n\nexport default WatchList;\n","import { useEffect, useContext } from 'react';\nimport { Container, PageTitle } from '../../styles/globalStyles';\nimport { useWatchList } from '../../context/WatchList/WatchListContext';\nimport EachWatchList from '../../components/EachWatchList';\nimport { MarketCoinsContext } from '../../context/MarketCoins/MarketCoinsContext';\n\nconst WatchListPage = () => {\n  const {\n    watchList,\n    watchListName,\n    updateWatchListName,\n    watchListFormOpen,\n    onClickOpenForm,\n    getWatchList,\n  } = useWatchList();\n  const { marketCoins, fetchMarketCoins } = useContext(MarketCoinsContext);\n\n  const getMarketCoins = async () => {\n    const coins = await fetchMarketCoins();\n    getWatchList(coins);\n  };\n\n  useEffect(() => {\n    if (marketCoins.length === 0) {\n      getMarketCoins();\n    } else {\n      getWatchList(marketCoins);\n    }\n  }, []);\n\n  return (\n    <Container>\n      <PageTitle>Watchlist</PageTitle>\n      {/* {!watchListFormOpen && (\n        <Button\n          primary=\"true\"\n          onClick={() => console.log(\"Open Create new watchlist form\")}\n        >\n          + CREATE NEW WATCHLIST\n        </Button>\n      )} */}\n      <EachWatchList\n        coins={watchList}\n        watchListFormOpen={watchListFormOpen}\n        onClickOpenForm={onClickOpenForm}\n        watchListName={watchListName}\n        updateWatchListName={updateWatchListName}\n      />\n    </Container>\n  );\n};\n\nexport default WatchListPage;\n","import styled from \"styled-components\";\n\nexport const PortfolioContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const TableName = styled.h2`\n  font-size: 25px;\n  color: #fff;\n  @media screen and (max-width: 960px) {\n    font-size: 20px;\n  }\n`;\n","import styled from 'styled-components';\nimport { AiFillEdit } from 'react-icons/ai';\nimport { VscChromeClose } from 'react-icons/vsc';\nimport { RiDeleteBin5Line } from 'react-icons/ri';\n\nexport const FormContainer = styled.div`\n  min-width: 350px;\n  background: #333;\n  color: #fff;\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  border-radius: 10px;\n  border: 1px solid #fff;\n`;\n\nexport const TopContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 20px;\n  border-top-right-radius: 10px;\n  border-top-left-radius: 10px;\n  background: #444;\n`;\nexport const PortfolioNameContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const PortfolioName = styled.h2`\n  font-size: 17px;\n  font-weight: 400;\n`;\n\nexport const EditIconButton = styled(AiFillEdit)`\n  color: #fff;\n  padding: 8px;\n  cursor: pointer;\n  font-size: 39px;\n  border-radius: 50%;\n  margin-left: 5px;\n\n  &:hover {\n    transition: all 0.2s linear;\n    background: #223;\n  }\n`;\n\nexport const CloseFormButton = styled(VscChromeClose)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  padding: 10px;\n  background: transparent;\n  border-radius: 50%;\n  cursor: pointer;\n  color: #fff;\n  font-size: 40px;\n\n  &:hover {\n    transition: all 0.2s linear;\n    background-color: #223;\n  }\n`;\n\nexport const DetailsContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport const AddDetailsForm = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px 20px 10px 20px;\n`;\nexport const BottomContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  padding: 10px 20px 20px 20px;\n`;\n\nexport const SelectPortfolioActionsContainer = styled.div`\n  width: 100%;\n  height: 200px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 20px;\n`;\n\nexport const FormTitle = styled.h3`\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const Table = styled.table`\n  width: 600px;\n`;\n\nexport const TableHead = styled.thead`\n  background: #ccc;\n  color: #000;\n`;\n\ninterface TableHeadDataProps {\n  align: string;\n}\n\nexport const TableHeadData = styled.th<TableHeadDataProps>`\n  padding: 10px;\n  text-align: ${({ align }) => align};\n`;\n\nexport const TableBody = styled.tbody`\n  background: #222;\n`;\n\ninterface TableBodyDataProps {\n  align: string;\n}\n\nexport const TableBodyData = styled.td<TableBodyDataProps>`\n  text-align: ${({ align }) => align};\n  padding: 15px;\n  border-bottom: solid 1px #777;\n`;\n\nexport const RemoveButton = styled.button`\n  cursor: pointer;\n  background: #111;\n  color: #ff8573;\n  padding: 8px 12px;\n  border-radius: 4px;\n  border: none;\n  font-size: 14px;\n  font-weight: 500;\n  border: 1px solid #ff8573;\n\n  &:hover {\n    transition: all 0.2s linear;\n    background: #c92e16;\n    color: #fff;\n    border: 1px solid #c92e16;\n  }\n`;\nexport const RemoveCoinIconButton = styled(RiDeleteBin5Line)`\n  cursor: pointer;\n  background: #111;\n  color: #ff8573;\n  padding: 8px;\n  border-radius: 4px;\n  border: none;\n  font-size: 42px;\n  font-weight: 500;\n  border: 1px solid #ff8573;\n  border-radius: 50%;\n\n  &:hover {\n    transition: all 0.2s linear;\n    background: #f25038;\n    color: #000;\n    border: 1px solid #f25038;\n  }\n`;\n\nexport const TableRow = styled.tr`\n  &:hover {\n    transition: all 0.2s linear;\n    background: #000;\n  }\n`;\n","import { useState, useContext, createContext } from 'react';\nimport {\n  MarketCoin,\n  PortfolioCoin,\n  PortfolioCoinBasic,\n} from '../../types/coins';\nimport { PortfolioContextData } from '../../types/context';\nimport { getCoinSymbol } from '../../utils/helpers';\nimport {\n  addCoinToCoinOptions,\n  removeCoinFromCoinOptions,\n  isValidatedValue,\n} from '../contextHelpers';\n\nconst portfolioDefaultValues = {\n  portfolioFormOpen: false,\n  onClickOpenPortfolioForm: () => null,\n  onClickClosePortfolioForm: () => null,\n  portfolioName: '',\n  updatePortfolioName: () => null,\n  portfolioCoins: [],\n  addNewCoinToPortfolio: () => null,\n  portfolioCoinOptions: [],\n  createPortfolioCoinOptions: () => null,\n  updatePortfolioCoins: () => null,\n};\n\nexport const PortfolioContext = createContext<PortfolioContextData>(\n  portfolioDefaultValues\n);\n\nexport const usePortfolio = () => {\n  return useContext(PortfolioContext);\n};\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const PortfolioProvider: React.FC<Props> = ({ children }) => {\n  const [portfolioFormOpen, setPortfolioFormOpen] = useState(false);\n  const [portfolioName, setPortfolioName] = useState('My Portfolio');\n  const [portfolioCoins, setPortfolioCoins] = useState<PortfolioCoin[]>([]);\n  const [portfolioCoinOptions, setPortfolioCoinOptions] = useState<\n    MarketCoin[]\n  >([]);\n\n  const onClickOpenPortfolioForm = () => {\n    setPortfolioFormOpen(true);\n  };\n  const onClickClosePortfolioForm = () => {\n    setPortfolioFormOpen(false);\n  };\n\n  const updatePortfolioName = (newName: string) => {\n    setPortfolioName(newName);\n  };\n  const deletePortfolioCoin = (\n    coinSymbol: string,\n    marketCoins: MarketCoin[]\n  ) => {\n    addCoinToCoinOptions(marketCoins, setPortfolioCoinOptions, coinSymbol);\n    setPortfolioCoins(\n      portfolioCoins.filter((coin) => coin.symbol !== coinSymbol)\n    );\n  };\n\n  const updatePortfolioCoins = (updatedCoins: PortfolioCoin[]) => {\n    setPortfolioCoins(updatedCoins);\n  };\n\n  const addNewCoinToPortfolio = (\n    newCoin: PortfolioCoinBasic,\n    marketCoins: MarketCoin[]\n  ) => {\n    if (newCoin.name_with_symbol.length > 0) {\n      const coinSymbol = getCoinSymbol(newCoin.name_with_symbol);\n      if (isValidatedValue(portfolioCoinOptions, coinSymbol)) {\n        let myCoin: PortfolioCoin;\n        const { bought_price_per_coin, bought_quantity } = newCoin;\n        for (let i = 0; i < marketCoins.length; i++) {\n          if (marketCoins[i].symbol === coinSymbol) {\n            const gainUSD =\n              (marketCoins[i].current_price - bought_price_per_coin) *\n              bought_quantity;\n            const gainPercentage =\n              ((marketCoins[i].current_price - bought_price_per_coin) /\n                bought_price_per_coin) *\n              100;\n            const currentValue = marketCoins[i].current_price * bought_quantity;\n            myCoin = {\n              ...marketCoins[i],\n              ...newCoin,\n              total_gain_usd: gainUSD,\n              total_gain_percentage: gainPercentage,\n              current_value: currentValue,\n            };\n            setPortfolioCoins([...portfolioCoins, myCoin]);\n            removeCoinFromCoinOptions(coinSymbol, setPortfolioCoinOptions);\n            break;\n          }\n        }\n      } else {\n        alert('This coin is not available');\n      }\n    }\n  };\n  const createPortfolioCoinOptions = (marketCoins: MarketCoin[]) => {\n    setPortfolioCoinOptions(marketCoins);\n  };\n\n  return (\n    <PortfolioContext.Provider\n      value={{\n        portfolioFormOpen,\n        onClickOpenPortfolioForm,\n        onClickClosePortfolioForm,\n        portfolioName,\n        updatePortfolioName,\n        portfolioCoins,\n        addNewCoinToPortfolio,\n        portfolioCoinOptions,\n        createPortfolioCoinOptions,\n        updatePortfolioCoins,\n      }}\n    >\n      {children}\n    </PortfolioContext.Provider>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DetailsContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport const AddDetailsForm = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px 20px 10px 20px;\n`;\nexport const BottomContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  /* padding-top: 10px; */\n  padding: 10px 20px 20px 20px;\n`;\n\nexport const FormTitle = styled.h3`\n  font-size: 20px;\n  margin-bottom: 10px;\n  font-weight: 500;\n  align-self: start;\n`;\n","import { useState, useEffect, useContext } from 'react';\nimport { MarketCoin } from '../../../types/coins';\nimport {\n  DetailsContainer,\n  BottomContainer,\n  AddDetailsForm,\n  FormTitle,\n} from './AddNewCoinForm.styled';\nimport { Button } from '../../../styles/globalStyles';\nimport { PortfolioCoinBasic } from '../../../types/coins';\nimport { TextFieldWithLabel, SearchCoinTextField } from '../../form_components';\nimport { usePortfolio } from '../../../context/Portfolio/PortfolioContext';\nimport { MarketCoinsContext } from '../../../context/MarketCoins/MarketCoinsContext';\n\ninterface Props {\n  setFormStep: any;\n}\nconst AddNewCoinForm: React.FC<Props> = ({ setFormStep }) => {\n  const {\n    addNewCoinToPortfolio,\n    portfolioCoinOptions,\n    createPortfolioCoinOptions,\n    onClickClosePortfolioForm,\n    portfolioCoins,\n  } = usePortfolio();\n  const { marketCoins } = useContext(MarketCoinsContext);\n\n  const [portfolioData, setPortfolioData] = useState<PortfolioCoinBasic>({\n    name_with_symbol: '',\n    bought_quantity: 0,\n    bought_price_per_coin: 0,\n    cost_basis: 0,\n    total_gain_usd: 0,\n    total_gain_percentage: 0,\n    current_value: 0,\n  });\n\n  useEffect(() => {\n    if (marketCoins.length > 0 && portfolioCoinOptions.length === 0)\n      createPortfolioCoinOptions(marketCoins);\n  }, [marketCoins, portfolioCoinOptions.length, createPortfolioCoinOptions]);\n\n  const updatePortfolioData = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setPortfolioData({ ...portfolioData, [e.target.name]: e.target.value });\n  };\n\n  const onSave = (e: React.MouseEvent) => {\n    e.preventDefault();\n    const { bought_quantity, cost_basis } = portfolioData;\n\n    addNewCoinToPortfolio(\n      {\n        ...portfolioData,\n        bought_quantity: Number(bought_quantity),\n        cost_basis: Number(cost_basis),\n        bought_price_per_coin: cost_basis / bought_quantity,\n      },\n      marketCoins\n    );\n\n    onClickClosePortfolioForm();\n  };\n\n  return (\n    <>\n      <AddDetailsForm>\n        <FormTitle>Add New Coin</FormTitle>\n        <SearchCoinTextField\n          value={portfolioData.name_with_symbol}\n          name='name_with_symbol'\n          handleChange={updatePortfolioData}\n          coins={portfolioCoinOptions}\n          hasLabel\n        />\n        <TextFieldWithLabel\n          label='Quantity'\n          name='bought_quantity'\n          placeholder='How many coins do you have?'\n          value={portfolioData.bought_quantity}\n          handleChange={updatePortfolioData}\n        />\n        <TextFieldWithLabel\n          label='Total Cost ($)'\n          name='cost_basis'\n          placeholder='Price you paid for this transaction'\n          value={portfolioData.cost_basis}\n          handleChange={updatePortfolioData}\n        />\n      </AddDetailsForm>\n      <BottomContainer>\n        <Button\n          onClick={() =>\n            portfolioCoins.length\n              ? setFormStep('edit-portfolio')\n              : onClickClosePortfolioForm()\n          }\n        >\n          {portfolioCoins.length ? 'BACK' : 'CLOSE'}\n        </Button>\n        <Button onClick={onSave} style={{ marginLeft: '10px' }} primary='true'>\n          SAVE\n        </Button>\n      </BottomContainer>\n    </>\n  );\n};\n\nexport default AddNewCoinForm;\n","import React, { useState } from 'react';\nimport {\n  AddDetailsForm,\n  FormTitle,\n  Table,\n  TableHead,\n  TableHeadData,\n  TableBody,\n  TableBodyData,\n  TableRow,\n  RemoveCoinIconButton,\n} from '../PortfolioForm.styled';\nimport { usePortfolio } from '../../../context/Portfolio/PortfolioContext';\nimport { TextField } from '../../../styles/globalStyles';\nimport { Button } from '../../../styles/globalStyles';\nimport { RiAddFill } from 'react-icons/ri';\nimport { BottomContainer } from '../AddNewCoinForm/AddNewCoinForm.styled';\nimport { PortfolioCoin } from '../../../types/coins';\n\ninterface Props {\n  setFormStep: any;\n}\n\nconst EditPortfolioForm: React.FC<Props> = ({ setFormStep }) => {\n  const { portfolioCoins, onClickClosePortfolioForm, updatePortfolioCoins } =\n    usePortfolio();\n  const [isFormValid, setIsFormValid] = useState<Record<string, boolean>>({\n    bought_quantity: true,\n    cost_basis: true,\n  });\n  const [formData, setFormData] = useState<PortfolioCoin[]>(portfolioCoins);\n\n  const onClickRemoveCoin = (coinSymbol: string) => {\n    setFormData((prevFormData) => {\n      return prevFormData.filter((coin) => coin.symbol !== coinSymbol);\n    });\n  };\n\n  const onChangeFormData = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    name: 'bought_quantity' | 'cost_basis',\n    coinId: string\n  ) => {\n    const value = Number(e.target.value) || 0;\n    const minValue = name === 'bought_quantity' ? 1 : 0;\n\n    setIsFormValid((prevIsFormValid) => {\n      const newIsFormValid = { ...prevIsFormValid };\n\n      newIsFormValid[name] = value >= minValue;\n      return newIsFormValid;\n    });\n\n    setFormData((prevFormData) => {\n      return prevFormData.map((coin) => {\n        if (coin.id !== coinId) {\n          return coin;\n        }\n\n        const updatedCoin = { ...coin };\n        updatedCoin[name] = value;\n        return updatedCoin;\n      });\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    updatePortfolioCoins(formData);\n    onClickClosePortfolioForm();\n  };\n\n  return (\n    <AddDetailsForm>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          width: '100%',\n          alignItems: 'center',\n          marginBottom: '10px',\n        }}\n      >\n        <FormTitle>Edit Portfolio</FormTitle>\n        <Button type='button' onClick={() => setFormStep('add-coin')}>\n          <RiAddFill /> NEW COIN\n        </Button>\n      </div>\n      <Table cellSpacing='0' cellPadding='0'>\n        <TableHead>\n          <tr>\n            <TableHeadData align='left'>Crypto Currency</TableHeadData>\n            <TableHeadData align='right'>Quantity</TableHeadData>\n            <TableHeadData align='right'>Price Paid (coin)</TableHeadData>\n            <TableHeadData align='right'>\n              Cost Basis <span>(USD/BTC)</span>\n            </TableHeadData>\n            <TableHeadData align='center'>Actions</TableHeadData>\n          </tr>\n        </TableHead>\n        <TableBody>\n          {formData.map((coin, index) => (\n            <TableRow key={coin.id}>\n              <TableBodyData align='left'>\n                {coin.name_with_symbol}\n              </TableBodyData>\n              <TableBodyData align='right'>\n                <TextField\n                  style={{\n                    width: '60px',\n                    border: isFormValid.bought_quantity ? '' : 'red solid 2px',\n                  }}\n                  type='number'\n                  value={coin.bought_quantity}\n                  min={1}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    onChangeFormData(e, 'bought_quantity', coin.id);\n                  }}\n                />\n              </TableBodyData>\n              <TableBodyData align='right'>\n                {coin.bought_price_per_coin}\n              </TableBodyData>\n              <TableBodyData align='right'>\n                ${' '}\n                <TextField\n                  style={{\n                    width: '80px',\n                    border: isFormValid.cost_basis ? '' : 'red solid 2px',\n                  }}\n                  type='text'\n                  value={coin.cost_basis}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    onChangeFormData(e, 'cost_basis', coin.id);\n                  }}\n                />\n              </TableBodyData>\n              <TableBodyData align='center'>\n                <RemoveCoinIconButton\n                  onClick={() => onClickRemoveCoin(coin.symbol)}\n                />\n              </TableBodyData>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <BottomContainer>\n        <Button type='button' onClick={onClickClosePortfolioForm}>\n          CLOSE\n        </Button>\n        <Button\n          type='submit'\n          onClick={handleSubmit}\n          style={{ marginLeft: '10px' }}\n          primary='true'\n        >\n          SAVE\n        </Button>\n      </BottomContainer>\n    </AddDetailsForm>\n  );\n};\n\nexport default EditPortfolioForm;\n","import { useState } from 'react';\nimport { MarketCoin } from '../../types/coins';\nimport {\n  FormContainer,\n  TopContainer,\n  PortfolioNameContainer,\n  PortfolioName,\n  EditIconButton,\n  CloseFormButton,\n} from './PortfolioForm.styled';\nimport { usePortfolio } from '../../context/Portfolio/PortfolioContext';\nimport AddNewCoinForm from './AddNewCoinForm';\nimport EditPortfolioForm from './EditPortfolioForm';\ninterface Props {\n  formStep: string;\n  setFormStep: any;\n}\n\nconst PortfolioForm: React.FC<Props> = ({ formStep, setFormStep }) => {\n  const { portfolioName, updatePortfolioName, onClickClosePortfolioForm } =\n    usePortfolio();\n\n  const [newPortfolioName, setNewPortfolioName] = useState(portfolioName);\n  const [portfolioNameFormOpen, setPortfolioNameFormOpen] = useState(false);\n\n  const onChangePortfolioName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNewPortfolioName(e.target.value);\n  };\n\n  const onSaveNewPortfolioName = () => {\n    updatePortfolioName(newPortfolioName);\n    setPortfolioNameFormOpen(false);\n  };\n\n  if (formStep === 'add-coin') {\n    return (\n      <FormContainer>\n        <AddNewCoinForm setFormStep={setFormStep} />\n      </FormContainer>\n    );\n  }\n\n  return (\n    <FormContainer>\n      <TopContainer>\n        <PortfolioNameContainer>\n          {portfolioNameFormOpen ? (\n            <>\n              <input\n                type='text'\n                value={newPortfolioName}\n                onChange={onChangePortfolioName}\n              />\n              <button onClick={onSaveNewPortfolioName}>Save</button>\n            </>\n          ) : (\n            <>\n              <PortfolioName>{portfolioName}</PortfolioName>\n              <EditIconButton onClick={() => setPortfolioNameFormOpen(true)}>\n                edit icon\n              </EditIconButton>\n            </>\n          )}\n        </PortfolioNameContainer>\n        <CloseFormButton onClick={onClickClosePortfolioForm} />\n      </TopContainer>\n      <EditPortfolioForm setFormStep={setFormStep} />\n    </FormContainer>\n  );\n};\n\nexport default PortfolioForm;\n","import React from 'react';\nimport {\n  Wrapper,\n  Table,\n  TableHeadRow,\n  TableHeadData,\n  TableBodyRow,\n  TableBodyData,\n  Ticker,\n  CoinImg,\n  CoinNameWrapper,\n} from '../CryptoTable/CryptoTable.styled';\nimport { usePortfolio } from '../../context/Portfolio/PortfolioContext';\n\nconst PortfolioTable: React.FC = () => {\n  const { portfolioCoins } = usePortfolio();\n\n  return (\n    <Wrapper>\n      <Table cellSpacing='0' cellPadding='0'>\n        <thead>\n          <TableHeadRow>\n            <TableHeadData align='center'>Name</TableHeadData>\n            <TableHeadData align='right'>Quantity</TableHeadData>\n            <TableHeadData align='right'>Price Paid (coin)</TableHeadData>\n            <TableHeadData align='right'>Cost Basis</TableHeadData>\n            <TableHeadData align='right'>Current Price (coin)</TableHeadData>\n            <TableHeadData align='right'>Current Value</TableHeadData>\n            <TableHeadData align='right'>24h %</TableHeadData>\n\n            <TableHeadData align='right'>Total Gain</TableHeadData>\n          </TableHeadRow>\n        </thead>\n        <tbody>\n          {portfolioCoins.map((coin) => (\n            <TableBodyRow key={coin.id}>\n              <TableBodyData align='left'>\n                <CoinNameWrapper>\n                  <CoinImg src={coin.image} alt={coin.name} />\n                  {coin.name} <Ticker>{coin.symbol}</Ticker>\n                </CoinNameWrapper>\n              </TableBodyData>\n              <TableBodyData align='right'>\n                {coin.bought_quantity.toLocaleString()}\n              </TableBodyData>\n              <TableBodyData align='right'>\n                $\n                {coin.bought_price_per_coin < 0\n                  ? coin.bought_price_per_coin.toFixed(6)\n                  : coin.bought_price_per_coin.toLocaleString()}\n              </TableBodyData>\n              <TableBodyData align='right'>\n                ${coin.cost_basis.toLocaleString()}\n              </TableBodyData>\n              <TableBodyData align='right'>\n                ${coin.current_price.toLocaleString()}\n              </TableBodyData>\n              <TableBodyData align='right'>\n                ${coin.current_value.toLocaleString()}\n              </TableBodyData>\n              <TableBodyData\n                align='right'\n                change={\n                  coin.price_change_percentage_24h > 0\n                    ? 'positive'\n                    : coin.price_change_percentage_24h < 0\n                    ? 'negative'\n                    : ''\n                }\n              >\n                {coin.price_change_percentage_24h.toFixed(2)}%\n              </TableBodyData>\n              <TableBodyData\n                align='right'\n                change={\n                  coin.total_gain_usd > 0\n                    ? 'positive'\n                    : coin.total_gain_usd < 0\n                    ? 'negative'\n                    : ''\n                }\n              >\n                {coin.total_gain_usd < 0\n                  ? `-$${coin.total_gain_usd.toLocaleString().substring(1)}`\n                  : `$${coin.total_gain_usd.toLocaleString()}`}\n              </TableBodyData>\n            </TableBodyRow>\n          ))}\n        </tbody>\n      </Table>\n    </Wrapper>\n  );\n};\n\nexport default PortfolioTable;\n","import { useState } from 'react';\nimport { MarketCoin } from '../../types/coins';\nimport { PortfolioContainer } from './EachPortfolio.styled';\nimport { HeaderWrapper, Button, TableName } from '../../styles/globalStyles';\nimport PortfolioForm from '../PortfolioForm';\nimport PortfolioTable from '../PortfolioTable';\nimport { usePortfolio } from '../../context/Portfolio/PortfolioContext';\n\nconst EachPortfolio: React.FC = () => {\n  const {\n    portfolioName,\n    portfolioFormOpen,\n    onClickOpenPortfolioForm,\n    portfolioCoins,\n  } = usePortfolio();\n\n  const [formStep, setFormStep] = useState('start');\n  const onClickEditPortfolio = () => {\n    setFormStep('edit-portfolio');\n    onClickOpenPortfolioForm();\n  };\n  const onClickAddCoins = () => {\n    setFormStep('add-coin');\n    onClickOpenPortfolioForm();\n  };\n\n  const hasCoinInPortfolio = portfolioCoins.length > 0;\n  return (\n    <PortfolioContainer>\n      <HeaderWrapper>\n        <TableName>{portfolioName}</TableName>\n        {!portfolioFormOpen && (\n          <Button\n            onClick={\n              hasCoinInPortfolio ? onClickEditPortfolio : onClickAddCoins\n            }\n          >\n            {hasCoinInPortfolio ? 'EDIT PORTFOLIO' : '+ADD COINS'}\n          </Button>\n        )}\n      </HeaderWrapper>\n      {portfolioFormOpen && (\n        <PortfolioForm formStep={formStep} setFormStep={setFormStep} />\n      )}\n\n      {hasCoinInPortfolio && !portfolioFormOpen && <PortfolioTable />}\n    </PortfolioContainer>\n  );\n};\n\nexport default EachPortfolio;\n","import { useContext, useEffect } from 'react';\nimport { Container, PageTitle } from '../../styles/globalStyles';\nimport EachPortfolio from '../../components/EachPortfolio';\nimport { MarketCoinsContext } from '../../context/MarketCoins/MarketCoinsContext';\n\nconst Portfolio = () => {\n  const { marketCoins, fetchMarketCoins } = useContext(MarketCoinsContext);\n  useEffect(() => {\n    if (marketCoins.length === 0) {\n      fetchMarketCoins();\n    }\n  }, []);\n\n  return (\n    <Container>\n      <PageTitle>Portfolio</PageTitle>\n      <EachPortfolio />\n    </Container>\n  );\n};\n\nexport default Portfolio;\n","import { AppContainer } from './App.styled';\nimport NavBar from './components/NavBar';\nimport GlobalStyle from './styles/globalStyles';\nimport Home from './pages/Home';\nimport WatchList from './pages/WatchList';\nimport Portfolio from './pages/Portfolio';\nimport { WatchListProvider } from './context/WatchList/WatchListContext';\nimport { PortfolioProvider } from './context/Portfolio/PortfolioContext';\nimport { MarketCoinsProvider } from './context/MarketCoins/MarketCoinsContext';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst App: React.FC = () => {\n  // todo: add new dynamic route for specific coin page\n  return (\n    <Router>\n      <MarketCoinsProvider>\n        <WatchListProvider>\n          <PortfolioProvider>\n            <AppContainer>\n              <GlobalStyle />\n              <NavBar />\n              <Switch>\n                <Route path='/crypto-folio' exact component={Home} />\n                <Route\n                  path='/crypto-folio/watchlist'\n                  exact\n                  component={WatchList}\n                />\n                <Route\n                  path='/crypto-folio/portfolio'\n                  exact\n                  component={Portfolio}\n                />\n              </Switch>\n            </AppContainer>\n          </PortfolioProvider>\n        </WatchListProvider>\n      </MarketCoinsProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}