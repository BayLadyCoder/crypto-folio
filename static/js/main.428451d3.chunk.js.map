{"version":3,"sources":["App.styled.ts","styles/theme.ts","components/NavBar/NavBar.styled.ts","images/logo.png","styles/globalStyles.ts","components/NavBar/NavBar.tsx","context/MarketCoins/MarketCoinsContext.tsx","components/SearchBar/SearchBar.styled.ts","components/SearchBar/SearchBar.tsx","components/CryptoTable/CryptoTableName.styled.ts","components/CryptoTable/CryptoTableName.tsx","components/CryptoTable/CryptoTable.styled.ts","components/CryptoTable/CryptoTable.tsx","pages/Home/Home.tsx","utils/helpers.ts","context/contextHelpers.ts","context/WatchList/WatchListContext.tsx","components/EachWatchList/EachWatchList.styled.ts","components/WatchListForm/WatchListForm.styled.ts","components/form_components/TextFieldWithLabel/TextFieldWithLabel.tsx","components/form_components/CurrencyRadioButtons/CurrencyRadioButtons.styled.ts","components/form_components/CurrencyRadioButtons/CurrencyRadioButtons.tsx","components/form_components/SearchCoinTextField/SearchCoinInputTextField.tsx","components/WatchListForm/WatchListForm.tsx","components/EachWatchList/EachWatchList.tsx","pages/WatchList/WatchList.tsx","components/EachPortfolio/EachPortfolio.styled.ts","components/PortfolioForm/PortfolioForm.styled.ts","components/PortfolioForm/PortfolioForm.tsx","components/PortfolioTable/PortfolioTable.tsx","components/EachPortfolio/EachPortfolio.tsx","context/Portfolio/PortfolioContext.tsx","pages/Portfolio/Portfolio.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppContainer","styled","div","theme","color","primary","primary_bright","secondary","NavBarBigContainer","header","NavBarContainer","Wrapper","LogoAppNameLink","Link","Logo","img","AppName","h1","MenuBtn","GlobalStyle","createGlobalStyle","Container","alignCenter","ButtonLink","big","fontBig","HeaderWrapper","PageTitle","marginBottom","Button","button","Loading","p","InputContainer","Label","label","TextField","input","TableName","h2","NavBar","to","src","logo","alt","marketCoinsDefaultValues","marketCoins","setMarketCoins","fetchMarketCoins","Error","isLoading","MarketCoinsContext","createContext","MarketCoinsProvider","children","useState","setIsLoading","useCallback","a","axios","get","res","data","console","error","Provider","value","SearchInput","SearchIcon","ImSearch","SearchBar","useContext","list","placeholder","type","id","map","coin","name","symbol","toUpperCase","CryptoTableName","tableName","style","width","Table","table","TableHeadRow","thead","tr","TableHeadData","th","align","TableBodyRow","CoinNameWrapper","span","TableBodyData","td","change","Ticker","CoinImg","CryptoTable","coins","cellSpacing","cellPadding","market_cap_rank","image","current_price","toLocaleString","price_change_percentage_24h","toFixed","market_cap","total_volume","Home","useEffect","length","getCoinSymbol","coinNameWithSymbol","includes","validateCoinNameWithSymbol","split","toLowerCase","isValidatedValue","coinOptions","coinSymbol","find","removeCoinFromCoinOptions","setCoinOptions","prev","filter","watchListDefaultValues","watchListFormOpen","onClickOpenForm","onClickCloseForm","watchList","watchListName","updateWatchListName","addNewCoinToWatchList","removeCoinFromWatchList","createCoinOptions","WatchListContext","useWatchList","WatchListProvider","setWatchListFormOpen","setWatchList","setWatchListName","newName","inputValue","setInputValue","newCoin","alert","fullCoin","addCoinToCoinOptions","WatchListContainer","Form","form","FormLeftContainer","FormRightContainer","FormTitle","CoinsContainer","CoinName","DeleteCoinIcon","HiOutlineX","DeleteCoinBtn","Coin","CloseFormButton","VscChromeClose","CloseFormButtonLeft","FormHeaderContainer","WatchListNameWrapper","EditWatchListNameButton","AiFillEdit","InputTextField","handleChange","htmlFor","onChange","required","CurrencyContainer","CurrencyWrapper","RadioButton","CurrencyRadioButtons","onChooseCurrency","onClick","SearchCoinInputTextField","hasLabel","WatchListForm","thisWatchListName","setThisWatchListName","watchListNameInputOpen","setWatchListNameInputOpen","getCoins","onCloseForm","aria-label","e","target","preventDefault","marginLeft","fontSize","onClickSaveWatchListName","onClickDeleteCoin","WatchList","WatchListPage","EachWatchList","PortfolioContainer","FormContainer","TopContainer","PortfolioNameContainer","PortfolioName","EditIconButton","DetailsContainer","AddDetailsForm","BottomContainer","SelectPortfolioActionsContainer","h3","AddOrEditCoinsForm","addNewCoinToPortfolio","portfolioName","updatePortfolioName","portfolioCoinOptions","createPortfolioCoinOptions","portfolioCoins","formStep","setFormStep","currency","setCurrency","estimate","setEstimate","name_with_symbol","bought_quantity","bought_price_per_coin","cost_basis","total_gain_usd","total_gain_percentage","current_value","portfolioData","setPortfolioData","btc_price_at_bought","btc_paid_quantity","boughtWithBitcoin","setBoughtWithBitcoin","costBasis","Number","updatePortfolioData","updateBoughtWithBitcoin","TextFieldWithLabel","alignSelf","PortfolioForm","newPortfolioName","setNewPortfolioName","portfolioNameFormOpen","setPortfolioNameFormOpen","onClickPortfolioActionButton","marginRight","log","PortfolioTable","substring","EachPortfolio","portfolioFormOpen","onClickOpenPortfolioForm","onClickClosePortfolioForm","portfolioDefaultValues","PortfolioContext","PortfolioProvider","setPortfolioFormOpen","setPortfolioName","setPortfolioCoins","setPortfolioCoinOptions","myCoin","i","gainUSD","gainPercentage","currentValue","Portfolio","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.428451d3.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: #000000;\n  min-height: 100vh;\n  width: 100vw;\n`;\n","const theme = {\n  color: {\n    primary: \"#14deb5\",\n    primary_bright: \"#40EDC9\",\n    secondary: \"#ae19d4\",\n  },\n};\n\nexport default theme;\n","import styled from \"styled-components\";\nimport theme from \"../../styles/theme\";\nimport { Link } from \"react-router-dom\";\n\nexport const NavBarBigContainer = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  border-bottom: 1px solid #466e64;\n`;\nexport const NavBarContainer = styled.header`\n  max-width: 1300px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 80%;\n  height: 60px;\n\n  @media screen and (max-width: 1200px) {\n    width: 90%;\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 100%;\n    padding: 0 10px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0px;\n  cursor: pointer;\n`;\n\nexport const LogoAppNameLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  padding: 0px;\n  cursor: pointer;\n  text-decoration: none;\n`;\n\nexport const Logo = styled.img`\n  width: 40px;\n  height: 40px;\n  margin-right: 10px;\n`;\n\nexport const AppName = styled.h1`\n  font-family: \"Zen Dots\", cursive;\n  font-size: 17px;\n  color: ${theme.color.primary};\n  font-weight: 400;\n`;\n\ninterface MenuBtnProps {\n  primary?: string;\n}\n\nexport const MenuBtn = styled(Link)<MenuBtnProps>`\n  background: transparent;\n  text-decoration: none;\n  white-space: nowrap;\n  padding: 10px 20px;\n  font-size: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: 500;\n  border: 1px solid transparent;\n  margin-right: 10px;\n  color: ${({ primary }) =>\n    primary === \"true\" ? theme.color.primary : \"#fff\"};\n\n  &:hover {\n    transition: all 0.3s ease-out;\n    /* border: 1px solid ${theme.color.primary_bright}; */\n    color: ${({ primary }) =>\n      primary === \"true\" ? theme.color.primary_bright : \"#ffd52e\"};\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/logo.8eb4d0f4.png\";","import styled, { createGlobalStyle } from \"styled-components\";\nimport theme from \"./theme\";\nimport { Link } from \"react-router-dom\";\n\nconst GlobalStyle = createGlobalStyle`\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    /* font-family: \"Hammersmith One\", sans-serif; */\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n    outline-color: #4a4a4a;\n}\n`;\n\ninterface ContainerProps {\n  alignCenter?: boolean;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  width: 80%;\n  max-width: 1300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: ${({ alignCenter }) =>\n    alignCenter ? \"center\" : \"flex-start\"};\n\n  @media screen and (max-width: 1200px) {\n    width: 90%;\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 100%;\n    padding: 0 10px;\n  }\n`;\n\ninterface ButtonProps {\n  primary?: string;\n  big?: boolean;\n  fontBig?: boolean;\n}\n\nexport const ButtonLink = styled(Link)<ButtonProps>`\n  border-radius: 4px;\n  background: ${({ primary }) =>\n    primary === \"true\" ? theme.color.secondary : \"transparent\"};\n  padding: ${({ big }) => (big ? \"12px 64px\" : \"10px 20px\")};\n  color: ${({ primary }) =>\n    primary === \"true\" ? \"#fff\" : theme.color.primary};\n  font-size: ${({ fontBig }) => (fontBig ? \"20px\" : \"16px\")};\n  white-space: nowrap;\n  cursor: pointer;\n  font-weight: 500;\n  border: 1px solid transparent;\n  border-color: ${({ primary }) =>\n    primary === \"true\" ? theme.color.secondary : \"transparent\"};\n\n  text-decoration: none;\n  text-transform: uppercase;\n  margin-left: 10px;\n\n  &:hover {\n    transition: all 0.3s ease-out;\n    color: ${({ primary }) =>\n      primary === \"true\" ? \"#fff\" : theme.color.primary_bright};\n    background: ${({ primary }) =>\n      primary === \"true\" ? \"#cc00ff\" : \"transparent\"};\n\n    border-color: ${({ primary }) =>\n      primary === \"true\" ? \"#444\" : theme.color.primary_bright};\n  }\n\n  @media screen and (max-width: 960px) {\n    width: 100%;\n  }\n`;\n\nexport const HeaderWrapper = styled.div`\n  width: 100%;\n  margin-top: 30px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\ninterface PageTitleProps {\n  marginBottom?: boolean;\n}\n\nexport const PageTitle = styled.h1<PageTitleProps>`\n  font-size: 30px;\n  margin-top: 30px;\n  margin-bottom: ${({ marginBottom }) => (marginBottom ? \"20px\" : \"0px\")};\n  color: #fff;\n  @media screen and (max-width: 960px) {\n    font-size: 25px;\n  }\n`;\n\ninterface ButtonProps {\n  primary?: string;\n}\nexport const Button = styled.button<ButtonProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  background: ${({ primary }) =>\n    primary === \"true\" ? theme.color.primary_bright : \"transparent\"};\n  padding: ${({ big }) => (big ? \"12px 64px\" : \"10px 20px\")};\n  color: ${({ primary }) =>\n    primary === \"true\" ? \"#000\" : theme.color.primary};\n  font-size: ${({ fontBig }) => (fontBig ? \"20px\" : \"16px\")};\n  border: 1px solid transparent;\n  white-space: nowrap;\n  cursor: pointer;\n  font-weight: 500;\n  text-decoration: none;\n  text-transform: uppercase;\n\n  &:hover {\n    transition: all 0.2s linear;\n    color: ${({ primary }) =>\n      primary === \"true\" ? \"#000\" : theme.color.primary_bright};\n    border-color: ${({ primary }) =>\n      primary === \"true\" ? \"#21b598\" : theme.color.primary_bright};\n    background: ${({ primary }) =>\n      primary === \"true\" ? theme.color.primary : \"transparent\"};\n  }\n\n  @media screen and (max-width: 960px) {\n    padding: ${({ big }) => (big ? \"10px 50px\" : \"7px 14px\")};\n    font-size: ${({ fontBig }) => (fontBig ? \"18px\" : \"16px\")};\n  }\n\n  @media screen and (max-width: 550px) {\n    padding: ${({ big }) => (big ? \"8px 40px\" : \"5px 10px\")};\n  }\n`;\n\nexport const Loading = styled.p`\n  color: #fff;\n  font-size: 25px;\n  margin-top: 50px;\n`;\n\nexport const InputContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n  padding: 5px 0px;\n  font-size: 15px;\n`;\n\nexport const TextField = styled.input`\n  padding: 10px;\n  width: 100%;\n  margin-bottom: 10px;\n  border: none;\n`;\n\nexport const TableName = styled.h2`\n  font-size: 25px;\n  color: #fff;\n  @media screen and (max-width: 960px) {\n    font-size: 20px;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport {\n  NavBarBigContainer,\n  NavBarContainer,\n  Wrapper,\n  LogoAppNameLink,\n  Logo,\n  AppName,\n  MenuBtn,\n} from \"./NavBar.styled\";\nimport logo from \"../../images/logo.png\";\nimport { ButtonLink } from \"../../styles/globalStyles\";\n\nconst NavBar: React.FC = () => {\n  return (\n    <NavBarBigContainer>\n      <NavBarContainer>\n        <LogoAppNameLink to=\"/crypto-folio\">\n          <Logo src={logo} alt=\"img\" />\n          <AppName>Crypto Folio</AppName>\n        </LogoAppNameLink>\n        <Wrapper>\n          <MenuBtn to=\"/crypto-folio\">Market</MenuBtn>\n          {/* <MenuBtn>Trending</MenuBtn> */}\n          <MenuBtn to=\"/crypto-folio/watchlist\">Watchlist</MenuBtn>\n          <MenuBtn to=\"/crypto-folio/portfolio\">Portfolio</MenuBtn>\n        </Wrapper>\n        <Wrapper>\n          <ButtonLink to=\"/crypto-folio/login\">LOG IN</ButtonLink>\n          <ButtonLink to=\"/crypto-folio/sign-up\" primary=\"true\">\n            Sign Up\n          </ButtonLink>\n        </Wrapper>\n      </NavBarContainer>\n    </NavBarBigContainer>\n  );\n};\n\nexport default NavBar;\n","import { useState, useCallback, createContext, useContext } from \"react\";\nimport { MarketCoin } from \"../../types/coins\";\nimport axios from \"axios\";\nimport { MarketCoinsContextData } from \"../../types/context\";\n\nconst marketCoinsDefaultValues = {\n  marketCoins: [],\n  setMarketCoins: () => null,\n  fetchMarketCoins: () => {\n    throw new Error(\"GithubContext not avaliable\");\n  },\n  isLoading: true,\n};\nexport const MarketCoinsContext = createContext<MarketCoinsContextData>(\n  marketCoinsDefaultValues\n);\nexport const useMarketCoins = () => {\n  return useContext(MarketCoinsContext);\n};\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const MarketCoinsProvider: React.FC<Props> = ({ children }) => {\n  const [marketCoins, setMarketCoins] = useState<MarketCoin[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const fetchMarketCoins = useCallback(async () => {\n    try {\n      const res = await axios.get(\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\n      );\n      setMarketCoins(res.data);\n      setIsLoading(false);\n      return res.data;\n    } catch (error) {\n      console.error(error);\n      setIsLoading(false);\n    }\n  }, [setMarketCoins]);\n\n  return (\n    <MarketCoinsContext.Provider\n      value={{\n        marketCoins,\n        setMarketCoins,\n        isLoading,\n        fetchMarketCoins,\n      }}\n    >\n      {children}\n    </MarketCoinsContext.Provider>\n  );\n};\n","import styled from \"styled-components\";\nimport theme from \"../../styles/theme\";\nimport { ImSearch } from \"react-icons/im\";\n\nexport const SearchBarContainer = styled.div`\n  display: flex;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0 15px;\n  margin-top: 30px;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 10px 20px;\n  width: 350px;\n  background: #404040;\n  color: ${theme.color.primary_bright};\n  border: none;\n  border-radius: 40px;\n  box-shadow: 0 0 3px 0 #ddd;\n  -moz-outline-radius: 40px;\n  color: #fff;\n  &::placeholder {\n    color: #d1d1d1;\n  }\n`;\n\nexport const SearchIcon = styled(ImSearch)`\n  color: #d1d1d1;\n  font-size: 20px;\n`;\n\nexport const SearchBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  padding: 8px 10px;\n  position: relative;\n  left: -50px;\n\n  &:hover {\n    background: #222;\n  }\n  &:hover ${SearchIcon} {\n    color: ${theme.color.primary};\n  }\n`;\n","import { useContext } from \"react\";\nimport { MarketCoinsContext } from \"../../context/MarketCoins/MarketCoinsContext\";\nimport { Wrapper, SearchInput } from \"./SearchBar.styled\";\n\nconst SearchBar: React.FC = () => {\n  const { marketCoins } = useContext(MarketCoinsContext);\n\n  return (\n    <Wrapper>\n      <SearchInput list=\"coins\" placeholder=\"Search\" type=\"text\" />\n      <datalist id=\"coins\">\n        {marketCoins.map((coin) => (\n          <option\n            key={coin.id}\n            value={`${coin.name} (${coin.symbol.toUpperCase()})`}\n          />\n        ))}\n      </datalist>\n    </Wrapper>\n  );\n};\n\nexport default SearchBar;\n","import styled from \"styled-components\";\n\nexport const TableName = styled.h2`\n  font-size: 25px;\n  color: #fff;\n  @media screen and (max-width: 960px) {\n    font-size: 20px;\n  }\n`;\n","import React from \"react\";\nimport { TableName } from \"./CryptoTableName.styled\";\nimport { HeaderWrapper } from \"../../styles/globalStyles\";\ninterface Props {\n  tableName: string;\n}\nconst CryptoTableName: React.FC<Props> = ({ tableName }) => {\n  return (\n    <div style={{ width: \"100%\" }}>\n      <HeaderWrapper>\n        <TableName>{tableName}</TableName>\n      </HeaderWrapper>\n    </div>\n  );\n};\n\nexport default CryptoTableName;\n","import styled from \"styled-components\";\n\ninterface TableHeadDataProps {\n  align: string;\n}\ninterface TableBodyDataProps {\n  align: string;\n  change?: string;\n}\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  overflow-x: scroll;\n\n  @media screen and (min-width: 960px) {\n    overflow-x: visible;\n  }\n`;\n\nexport const Table = styled.table`\n  margin: 25px 0;\n`;\n\nexport const TableHead = styled.thead``;\n\nexport const TableHeadRow = styled.tr`\n  background-color: #222;\n  border-bottom: solid 1px #777;\n`;\n\nexport const TableHeadData = styled.th<TableHeadDataProps>`\n  color: #ddd;\n  text-align: ${({ align }) => align};\n  padding: 15px 10px;\n  font-weight: 500;\n  font-size: 15px;\n`;\n\nexport const TableBodyRow = styled.tr`\n  &:hover {\n    background-color: #222;\n  }\n`;\n\nexport const CoinNameWrapper = styled.span`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TableBodyData = styled.td<TableBodyDataProps>`\n  text-align: ${({ align }) => align};\n  padding: 20px 10px;\n  border-bottom: solid 1px #777;\n  color: ${({ change }) =>\n    change === \"positive\"\n      ? \"#26c761\"\n      : change === \"negative\"\n      ? \"#ff7a7a\"\n      : \"#fff\"};\n  cursor: pointer;\n`;\n\nexport const Ticker = styled.span`\n  color: #aaa;\n  font-size: 14px;\n  margin-left: 5px;\n  text-transform: uppercase;\n`;\n\nexport const CoinImg = styled.img`\n  width: 25px;\n  margin-right: 15px;\n`;\n","import {\n  Wrapper,\n  Table,\n  TableHeadRow,\n  TableHeadData,\n  TableBodyRow,\n  TableBodyData,\n  Ticker,\n  CoinImg,\n  CoinNameWrapper,\n} from \"./CryptoTable.styled\";\nimport { MarketCoin } from \"../../types/coins\";\ninterface Props {\n  coins: MarketCoin[];\n}\n\nconst CryptoTable: React.FC<Props> = ({ coins }) => {\n  return (\n    <Wrapper>\n      <Table cellSpacing=\"0\" cellPadding=\"0\">\n        <thead>\n          <TableHeadRow>\n            <TableHeadData align=\"center\">Rank</TableHeadData>\n            <TableHeadData align=\"left\">Name</TableHeadData>\n            <TableHeadData align=\"right\">Price</TableHeadData>\n            <TableHeadData align=\"right\">24h %</TableHeadData>\n            <TableHeadData align=\"right\">Market Cap</TableHeadData>\n            <TableHeadData align=\"right\">Volume(24h)</TableHeadData>\n          </TableHeadRow>\n        </thead>\n        <tbody>\n          {coins.map((coin) => (\n            <TableBodyRow key={coin.id}>\n              <TableBodyData align=\"center\">\n                {coin.market_cap_rank}\n              </TableBodyData>\n              <TableBodyData align=\"left\">\n                <CoinNameWrapper>\n                  <CoinImg src={coin.image} alt={coin.name} />\n                  {coin.name} <Ticker>{coin.symbol}</Ticker>\n                </CoinNameWrapper>\n              </TableBodyData>\n              <TableBodyData align=\"right\">\n                ${coin.current_price.toLocaleString()}\n              </TableBodyData>\n              <TableBodyData\n                align=\"right\"\n                change={\n                  coin.price_change_percentage_24h > 0\n                    ? \"positive\"\n                    : coin.price_change_percentage_24h < 0\n                    ? \"negative\"\n                    : \"\"\n                }\n              >\n                {coin.price_change_percentage_24h.toFixed(2)}%\n              </TableBodyData>\n              <TableBodyData align=\"right\">\n                ${coin.market_cap.toLocaleString()}\n              </TableBodyData>\n              <TableBodyData align=\"right\">\n                ${coin.total_volume.toLocaleString()}\n              </TableBodyData>\n            </TableBodyRow>\n          ))}\n        </tbody>\n      </Table>\n    </Wrapper>\n  );\n};\n\nexport default CryptoTable;\n","import { useEffect, useContext } from \"react\";\nimport { MarketCoinsContext } from \"../../context/MarketCoins/MarketCoinsContext\";\nimport SearchBar from \"../../components/SearchBar\";\nimport { CryptoTable, CryptoTableName } from \"../../components/CryptoTable\";\n\nimport { Container, Loading, PageTitle } from \"../../styles/globalStyles\";\nconst Home = () => {\n  const { marketCoins, fetchMarketCoins } = useContext(MarketCoinsContext);\n  useEffect(() => {\n    fetchMarketCoins();\n  }, [fetchMarketCoins]);\n\n  if (marketCoins.length === 0) return <Loading>Loading...</Loading>;\n\n  return (\n    <Container>\n      <PageTitle>Market</PageTitle>\n      <SearchBar />\n      <CryptoTableName tableName=\"Crypto Market Monitor\" />\n      <CryptoTable coins={marketCoins} />\n    </Container>\n  );\n};\n\nexport default Home;\n","import { MarketCoin } from \"../types/coins\";\n\nexport const getCoinNameAndSymbol = (coin: MarketCoin) => {\n  return `${coin.name} (${coin.symbol.toUpperCase()})`;\n};\n\nexport const getCoinNameAndSymbolArray = (marketCoins: MarketCoin[]) => {\n  const options = marketCoins.map((coin: MarketCoin) => {\n    return `${coin.name} (${coin.symbol.toUpperCase()})`;\n  });\n\n  return options;\n};\n\nconst validateCoinNameWithSymbol = (coinNameWithSymbol: string) => {\n  if (!coinNameWithSymbol.includes(\"(\")) return false;\n  if (!coinNameWithSymbol.includes(\")\")) return false;\n  if (coinNameWithSymbol.length < 4) return false;\n\n  return true;\n};\n\nexport const getCoinSymbol = (coinNameWithSymbol: string) => {\n  if (validateCoinNameWithSymbol(coinNameWithSymbol)) {\n    return coinNameWithSymbol.split(\"(\")[1].split(\")\")[0].toLowerCase();\n  } else {\n    return \"Invalid coin\";\n  }\n};\n","import { Dispatch, SetStateAction } from \"react\";\nimport { MarketCoin } from \"../types/coins\";\n\nexport const isValidatedValue = (\n  coinOptions: MarketCoin[],\n  coinSymbol: string\n) => {\n  const isInOptions = coinOptions.find((coin) => coin.symbol === coinSymbol);\n  if (isInOptions) return true;\n\n  return false;\n};\n\nexport const removeCoinFromCoinOptions = (\n  coinSymbol: string,\n  setCoinOptions: Dispatch<SetStateAction<MarketCoin[]>>\n) => {\n  setCoinOptions((prev) => {\n    const coinNames = prev.filter((coin) => coin.symbol !== coinSymbol);\n    return coinNames;\n  });\n};\n\nexport const addCoinToCoinOptions = (\n  marketCoins: MarketCoin[],\n  setCoinOptions: Dispatch<SetStateAction<MarketCoin[]>>,\n  coinSymbol: string\n) => {\n  const fullCoin = marketCoins.filter((coin) => coin.symbol === coinSymbol)[0];\n  setCoinOptions((prev) => [fullCoin, ...prev]);\n};\n","import {\n  useState,\n  useContext,\n  createContext,\n  Dispatch,\n  SetStateAction,\n} from \"react\";\nimport { MarketCoin } from \"../../types/coins\";\nimport { WatchListContextData } from \"../../types/context\";\nimport { getCoinSymbol } from \"../../utils/helpers\";\nimport {\n  removeCoinFromCoinOptions,\n  addCoinToCoinOptions,\n  isValidatedValue,\n} from \"../contextHelpers\";\n\nconst watchListDefaultValues = {\n  watchListFormOpen: false,\n  onClickOpenForm: () => null,\n  onClickCloseForm: () => null,\n  watchList: [],\n  watchListName: \"\",\n  updateWatchListName: () => null,\n  addNewCoinToWatchList: () => null,\n  removeCoinFromWatchList: () => null,\n  coinOptions: [],\n  createCoinOptions: () => null,\n};\n\nexport const WatchListContext = createContext<WatchListContextData>(\n  watchListDefaultValues\n);\n\nexport const useWatchList = () => {\n  return useContext(WatchListContext);\n};\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const WatchListProvider: React.FC<Props> = ({ children }) => {\n  const [watchListFormOpen, setWatchListFormOpen] = useState<boolean>(false);\n  const [watchList, setWatchList] = useState<MarketCoin[]>([]);\n  const [watchListName, setWatchListName] = useState<string>(\"My Watchlist\");\n  const [coinOptions, setCoinOptions] = useState<MarketCoin[]>([]);\n\n  const onClickOpenForm = () => {\n    setWatchListFormOpen(true);\n  };\n  const onClickCloseForm = () => {\n    setWatchListFormOpen(false);\n  };\n\n  const updateWatchListName = (newName: string) => {\n    setWatchListName(newName);\n  };\n\n  const addNewCoinToWatchList = (\n    marketCoins: MarketCoin[],\n    coinOptions: MarketCoin[],\n    inputValue: string,\n    setInputValue: Dispatch<SetStateAction<string>>\n  ) => {\n    const coinSymbol = getCoinSymbol(inputValue);\n\n    if (isValidatedValue(coinOptions, coinSymbol)) {\n      removeCoinFromCoinOptions(coinSymbol, setCoinOptions);\n      const newCoin = marketCoins.filter(\n        (coin) => coin.symbol === coinSymbol\n      )[0];\n      setWatchList((prev) => [...prev, newCoin]);\n    } else {\n      alert(\"This coin is not supported currently. Please try again.\");\n    }\n    setInputValue(\"\");\n  };\n\n  const removeCoinFromWatchList = (\n    coinSymbol: string,\n    marketCoins: MarketCoin[]\n  ) => {\n    setWatchList((prev) => prev.filter((coin) => coin.symbol !== coinSymbol));\n    addCoinToCoinOptions(marketCoins, setCoinOptions, coinSymbol);\n  };\n\n  const createCoinOptions = (marketCoins: MarketCoin[]) => {\n    setCoinOptions(marketCoins);\n  };\n  return (\n    <WatchListContext.Provider\n      value={{\n        watchListFormOpen,\n        onClickOpenForm,\n        onClickCloseForm,\n        watchListName,\n        updateWatchListName,\n        watchList,\n        addNewCoinToWatchList,\n        removeCoinFromWatchList,\n        coinOptions,\n        createCoinOptions,\n      }}\n    >\n      {children}\n    </WatchListContext.Provider>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const WatchListContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import styled from \"styled-components\";\nimport { HiOutlineX } from \"react-icons/hi\";\nimport { VscChromeClose } from \"react-icons/vsc\";\nimport { AiFillEdit } from \"react-icons/ai\";\n\nexport const Form = styled.form`\n  width: 950px;\n  display: flex;\n  justify-content: center;\n  background-color: #fff;\n  border-radius: 10px;\n  border: 1px solid #fff;\n\n  @media screen and (max-width: 960px) {\n    flex-direction: column;\n    width: 450px;\n  }\n  @media screen and (max-width: 550px) {\n    flex-direction: column;\n    width: 330px;\n  }\n`;\n\nexport const FormLeftContainer = styled.div`\n  width: 30%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  background: #555;\n  padding: 10px 20px 20px 20px;\n  border-top-left-radius: 10px;\n  border-bottom-left-radius: 10px;\n  @media screen and (max-width: 960px) {\n    width: 100%;\n    border-bottom-left-radius: 0px;\n  }\n`;\nexport const FormRightContainer = styled.div`\n  width: 70%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  background: #444;\n  padding: 10px 20px 20px 20px;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  @media screen and (max-width: 960px) {\n    width: 100%;\n    border-top-right-radius: 0px;\n  }\n`;\n\nexport const FormTitle = styled.h2`\n  font-size: 20px;\n  color: #fff;\n  padding: 10px;\n`;\n\n// export const AddCoinsInput = styled.input`\n//   width: 100%;\n//   padding: 5px 10px;\n//   margin-bottom: 10px;\n// `;\n\nexport const CoinsContainer = styled.div`\n  background-color: #222;\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  min-height: 120px;\n  max-height: 450px;\n  width: 100%;\n  border: 1px solid #aaa;\n  padding: 10px 0px 0px 10px;\n  overflow-y: scroll;\n`;\n\nexport const CoinName = styled.p`\n  cursor: default;\n`;\n\nexport const DeleteCoinIcon = styled(HiOutlineX)`\n  font-size: 18px;\n  width: 15px;\n  height: 15px;\n  background: #ddd;\n  font-weight: 700;\n  border-radius: 50%;\n`;\nexport const DeleteCoinBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 10px;\n  padding: 4px;\n  border-radius: 50%;\n  background-color: #ddd;\n  cursor: pointer;\n  border: 1px solid transparent;\n\n  &:hover {\n    background: #db1d1d !important;\n    color: #fff;\n    border: 1px solid #fff;\n\n    ${DeleteCoinIcon} {\n      background: #db1d1d !important;\n    }\n  }\n`;\n\nexport const Coin = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #524101;\n  padding: 8px 12px;\n  border-radius: 20px;\n  border: 2px solid #bbb;\n  color: #eee;\n  margin-bottom: 10px;\n  margin-right: 10px;\n\n  &:hover {\n    background-color: #786001;\n    color: #fff;\n    border: 2px solid #fff;\n\n    ${DeleteCoinBtn},${DeleteCoinIcon} {\n      background: #ffcc00;\n    }\n  }\n`;\n\nexport const CloseFormButton = styled(VscChromeClose)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  padding: 10px;\n  background: transparent;\n  border-radius: 50%;\n  cursor: pointer;\n  color: #fff;\n  font-size: 40px;\n\n  &:hover {\n    transition: all 0.2s linear;\n    background-color: #223;\n  }\n  @media screen and (max-width: 960px) {\n    display: none;\n  }\n`;\nexport const CloseFormButtonLeft = styled(VscChromeClose)`\n  display: none;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  padding: 10px;\n  background: transparent;\n  border-radius: 50%;\n  cursor: pointer;\n  color: #fff;\n  font-size: 40px;\n\n  &:hover {\n    transition: all 0.2s linear;\n    background-color: #223;\n  }\n  @media screen and (max-width: 960px) {\n    display: flex;\n  }\n`;\n\nexport const FormHeaderContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 5px;\n`;\n\nexport const WatchListNameWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\nexport const EditWatchListNameButton = styled(AiFillEdit)`\n  color: #fff;\n  padding: 10px;\n  cursor: pointer;\n  font-size: 40px;\n  border-radius: 50%;\n\n  &:hover {\n    background: #223;\n  }\n`;\n","import React from \"react\";\nimport { InputContainer, Label, TextField } from \"../../../styles/globalStyles\";\n\ninterface Props {\n  label: string;\n  name: string;\n  placeholder: string;\n  value: number | string;\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst InputTextField: React.FC<Props> = ({\n  label,\n  name,\n  placeholder,\n  value,\n  handleChange,\n}) => {\n  return (\n    <InputContainer>\n      <Label htmlFor={name}>{label}</Label>\n      <TextField\n        type=\"text\"\n        name={name}\n        placeholder={placeholder}\n        value={value || \"\"}\n        onChange={handleChange}\n        required\n      />\n    </InputContainer>\n  );\n};\n\nexport default InputTextField;\n","import styled from \"styled-components\";\n\nexport const CurrencyContainer = styled.div`\n  width: 300px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 5px 0px;\n`;\nexport const CurrencyWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nexport const RadioButton = styled.input`\n  margin-right: 5px;\n  color: red;\n  background: red;\n`;\n","import React from \"react\";\nimport {\n  // Label,\n  CurrencyContainer,\n  CurrencyWrapper,\n  RadioButton,\n} from \"./CurrencyRadioButtons.styled\";\nimport { Label } from \"../../../styles/globalStyles\";\ninterface Props {\n  onChooseCurrency: (value: string) => void;\n}\n\nconst CurrencyRadioButtons: React.FC<Props> = ({ onChooseCurrency }) => {\n  return (\n    <CurrencyContainer>\n      <Label>Currency</Label>\n      <CurrencyWrapper>\n        <RadioButton\n          type=\"radio\"\n          id=\"usd\"\n          name=\"currency\"\n          value=\"usd\"\n          onClick={() => onChooseCurrency(\"USD\")}\n        />\n        <Label htmlFor=\"usd\">USD</Label>\n      </CurrencyWrapper>\n      <CurrencyWrapper>\n        <RadioButton\n          type=\"radio\"\n          id=\"btc\"\n          name=\"currency\"\n          value=\"btc\"\n          onClick={() => onChooseCurrency(\"BTC\")}\n        />\n        <Label htmlFor=\"btc\">BTC</Label>\n      </CurrencyWrapper>\n    </CurrencyContainer>\n  );\n};\n\nexport default CurrencyRadioButtons;\n","import React from \"react\";\nimport { InputContainer, Label, TextField } from \"../../../styles/globalStyles\";\nimport { MarketCoin } from \"../../../types/coins\";\n\ninterface Props {\n  width?: string;\n  value: string;\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  coins: MarketCoin[];\n  name: string;\n  hasLabel?: boolean;\n}\nconst SearchCoinInputTextField: React.FC<Props> = ({\n  value,\n  name,\n  handleChange,\n  coins,\n  hasLabel,\n}) => {\n  return (\n    <InputContainer>\n      {hasLabel && <Label htmlFor=\"coins\">Crypto Currencies</Label>}\n      <TextField\n        type=\"search\"\n        list=\"coins\"\n        placeholder=\"Search\"\n        name={name}\n        value={value}\n        onChange={handleChange}\n      />\n      <datalist id=\"coins\">\n        {coins.map((coin) => (\n          <option\n            key={coin.id}\n            value={`${coin.name} (${coin.symbol.toUpperCase()})`}\n          />\n        ))}\n      </datalist>\n    </InputContainer>\n  );\n};\n\nexport default SearchCoinInputTextField;\n","import { useContext, useEffect, useState } from \"react\";\nimport { MarketCoinsContext } from \"../../context/MarketCoins/MarketCoinsContext\";\nimport { Container, Loading } from \"../../styles/globalStyles\";\nimport {\n  Form,\n  FormLeftContainer,\n  FormRightContainer,\n  FormTitle,\n  CoinsContainer,\n  Coin,\n  CoinName,\n  DeleteCoinBtn,\n  DeleteCoinIcon,\n  CloseFormButtonLeft,\n  CloseFormButton,\n  FormHeaderContainer,\n  WatchListNameWrapper,\n  EditWatchListNameButton,\n} from \"./WatchListForm.styled\";\nimport { Button } from \"../../styles/globalStyles\";\nimport { MarketCoin } from \"../../types/coins\";\nimport { useWatchList } from \"../../context/WatchList/WatchListContext\";\nimport { AiOutlineRight } from \"react-icons/ai\";\nimport { SearchCoinTextField } from \"../form_components\";\ninterface Props {\n  watchListName: string;\n  updateWatchListName: (newName: string) => void;\n}\nconst WatchListForm: React.FC<Props> = ({\n  watchListName,\n  updateWatchListName,\n}) => {\n  const {\n    watchList,\n    onClickCloseForm,\n    addNewCoinToWatchList,\n    removeCoinFromWatchList,\n    coinOptions,\n    createCoinOptions,\n  } = useWatchList();\n\n  const [inputValue, setInputValue] = useState<string>(\"\");\n\n  const [thisWatchListName, setThisWatchListName] = useState<string>(\n    watchListName\n  );\n  const [watchListNameInputOpen, setWatchListNameInputOpen] = useState<boolean>(\n    false\n  );\n  const { marketCoins, fetchMarketCoins } = useContext(MarketCoinsContext);\n\n  useEffect(() => {\n    const getCoins = async () => {\n      const coins = await fetchMarketCoins();\n      createCoinOptions(coins);\n    };\n\n    if (marketCoins.length === 0) getCoins();\n  }, [fetchMarketCoins, marketCoins.length, createCoinOptions]);\n\n  useEffect(() => {\n    if (marketCoins.length > 0 && coinOptions.length === 0)\n      createCoinOptions(marketCoins);\n  }, [marketCoins, coinOptions.length, createCoinOptions]);\n\n  const onAddCoin = (e: React.MouseEvent) => {\n    e.preventDefault();\n    addNewCoinToWatchList(marketCoins, coinOptions, inputValue, setInputValue);\n  };\n\n  const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const onCloseForm = () => {\n    onClickCloseForm();\n  };\n\n  const onClickDeleteCoin = (e: React.MouseEvent, coinSymbol: string) => {\n    e.preventDefault();\n    removeCoinFromWatchList(coinSymbol, marketCoins);\n  };\n\n  const onChangeWatchListName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setThisWatchListName(e.target.value);\n  };\n  const onClickSaveWatchListName = (e: React.MouseEvent) => {\n    e.preventDefault();\n    updateWatchListName(thisWatchListName);\n    setWatchListNameInputOpen(false);\n  };\n\n  if (marketCoins.length === 0 || coinOptions.length === 0)\n    return <Loading>Loading...</Loading>;\n\n  return (\n    <Container alignCenter>\n      <Form>\n        <FormLeftContainer>\n          <FormHeaderContainer>\n            <FormTitle>Add Coins</FormTitle>\n            <CloseFormButtonLeft\n              type=\"button\"\n              aria-label=\"Close Form\"\n              onClick={onCloseForm}\n            >\n              X\n            </CloseFormButtonLeft>\n          </FormHeaderContainer>\n          <SearchCoinTextField\n            value={inputValue}\n            name=\"coins\"\n            handleChange={onChangeInput}\n            coins={coinOptions}\n          />\n\n          <Button primary=\"true\" onClick={onAddCoin}>\n            ADD TO WATCHLIST{\" \"}\n            <AiOutlineRight style={{ marginLeft: \"5px\", fontSize: \"20px\" }} />\n          </Button>\n        </FormLeftContainer>\n        <FormRightContainer>\n          <FormHeaderContainer>\n            <WatchListNameWrapper>\n              {watchListNameInputOpen ? (\n                <>\n                  <input\n                    type=\"text\"\n                    value={thisWatchListName}\n                    onChange={onChangeWatchListName}\n                  />\n                  <button onClick={(e) => onClickSaveWatchListName(e)}>\n                    save\n                  </button>{\" \"}\n                </>\n              ) : (\n                <>\n                  <FormTitle>{thisWatchListName}</FormTitle>\n                  <EditWatchListNameButton\n                    type=\"button\"\n                    aria-label=\"Edit Watchlist Name\"\n                    onClick={() => setWatchListNameInputOpen(true)}\n                  />\n                </>\n              )}\n            </WatchListNameWrapper>\n            <CloseFormButton\n              type=\"button\"\n              aria-label=\"Close Form\"\n              onClick={onCloseForm}\n            />\n          </FormHeaderContainer>\n          <CoinsContainer>\n            {watchList.map((coin: MarketCoin) => (\n              <Coin key={coin.id}>\n                <CoinName>{`${\n                  coin.name\n                } (${coin.symbol.toUpperCase()})`}</CoinName>\n                <DeleteCoinBtn\n                  onClick={(e) => onClickDeleteCoin(e, coin.symbol)}\n                >\n                  <DeleteCoinIcon />\n                </DeleteCoinBtn>\n              </Coin>\n            ))}\n          </CoinsContainer>\n        </FormRightContainer>\n      </Form>\n    </Container>\n  );\n};\n\nexport default WatchListForm;\n","import React from \"react\";\nimport { MarketCoin } from \"../../types/coins\";\nimport { WatchListContainer } from \"./EachWatchList.styled\";\nimport { HeaderWrapper, Button, TableName } from \"../../styles/globalStyles\";\nimport WatchListForm from \"../WatchListForm\";\nimport { CryptoTable } from \"../CryptoTable\";\n\ninterface Props {\n  coins: MarketCoin[];\n  watchListFormOpen: boolean;\n  onClickOpenForm: () => void;\n  watchListName: string;\n  updateWatchListName: (newName: string) => void;\n}\n\nconst WatchList: React.FC<Props> = ({\n  coins,\n  watchListFormOpen,\n  onClickOpenForm,\n  watchListName,\n  updateWatchListName,\n}) => {\n  return (\n    <WatchListContainer>\n      <HeaderWrapper>\n        <TableName>{watchListName}</TableName>\n        {!watchListFormOpen && (\n          <Button onClick={onClickOpenForm}>+ADD COINS</Button>\n        )}\n      </HeaderWrapper>\n      {watchListFormOpen && (\n        <WatchListForm\n          watchListName={watchListName}\n          updateWatchListName={updateWatchListName}\n        />\n      )}\n\n      {coins.length > 0 && !watchListFormOpen && <CryptoTable coins={coins} />}\n    </WatchListContainer>\n  );\n};\n\nexport default WatchList;\n","import { Container, PageTitle } from \"../../styles/globalStyles\";\nimport { useWatchList } from \"../../context/WatchList/WatchListContext\";\nimport EachWatchList from \"../../components/EachWatchList/\";\n\nconst WatchListPage = () => {\n  const {\n    watchList,\n    watchListName,\n    updateWatchListName,\n    watchListFormOpen,\n    onClickOpenForm,\n  } = useWatchList();\n\n  return (\n    <Container>\n      <PageTitle>Watchlist</PageTitle>\n      {/* {!watchListFormOpen && (\n        <Button\n          primary=\"true\"\n          onClick={() => console.log(\"Open Create new watchlist form\")}\n        >\n          + CREATE NEW WATCHLIST\n        </Button>\n      )} */}\n      <EachWatchList\n        coins={watchList}\n        watchListFormOpen={watchListFormOpen}\n        onClickOpenForm={onClickOpenForm}\n        watchListName={watchListName}\n        updateWatchListName={updateWatchListName}\n      />\n    </Container>\n  );\n};\n\nexport default WatchListPage;\n","import styled from \"styled-components\";\n\nexport const PortfolioContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const TableName = styled.h2`\n  font-size: 25px;\n  color: #fff;\n  @media screen and (max-width: 960px) {\n    font-size: 20px;\n  }\n`;\n","import styled from \"styled-components\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { VscChromeClose } from \"react-icons/vsc\";\n\nexport const FormContainer = styled.div`\n  min-width: 350px;\n  background: #333;\n  color: #fff;\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  border-radius: 10px;\n  border: 1px solid #fff;\n`;\n\nexport const TopContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 20px;\n  border-top-right-radius: 10px;\n  border-top-left-radius: 10px;\n  background: #444;\n`;\nexport const PortfolioNameContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const PortfolioName = styled.h2`\n  font-size: 17px;\n  font-weight: 400;\n`;\n\nexport const EditIconButton = styled(AiFillEdit)`\n  color: #fff;\n  padding: 8px;\n  cursor: pointer;\n  font-size: 39px;\n  border-radius: 50%;\n  margin-left: 5px;\n\n  &:hover {\n    transition: all 0.2s linear;\n    background: #223;\n  }\n`;\n\nexport const CloseFormButton = styled(VscChromeClose)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  padding: 10px;\n  background: transparent;\n  border-radius: 50%;\n  cursor: pointer;\n  color: #fff;\n  font-size: 40px;\n\n  &:hover {\n    transition: all 0.2s linear;\n    background-color: #223;\n  }\n`;\n\nexport const DetailsContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport const AddDetailsForm = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px 20px 10px 20px;\n`;\nexport const BottomContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  padding: 10px 20px 20px 20px;\n`;\n\nexport const SelectPortfolioActionsContainer = styled.div`\n  width: 100%;\n  height: 200px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 20px;\n`;\n\nexport const FormTitle = styled.h3`\n  font-size: 20px;\n  margin-bottom: 10px;\n  font-weight: 500;\n  align-self: start;\n`;\n","import { useState, useEffect } from \"react\";\nimport { MarketCoin } from \"../../types/coins\";\nimport {\n  FormContainer,\n  TopContainer,\n  PortfolioNameContainer,\n  PortfolioName,\n  EditIconButton,\n  DetailsContainer,\n  BottomContainer,\n  CloseFormButton,\n  AddDetailsForm,\n  SelectPortfolioActionsContainer,\n  FormTitle,\n} from \"./PortfolioForm.styled\";\n\nimport { Button } from \"../../styles/globalStyles\";\nimport { PortfolioCoinBasic, PortfolioCoin } from \"../../types/coins\";\nimport {\n  TextFieldWithLabel,\n  SearchCoinTextField,\n  CurrencyRadioButtons,\n} from \"../form_components\";\nimport { RiAddFill } from \"react-icons/ri\";\nimport { MdModeEdit } from \"react-icons/md\";\n\ninterface Props {\n  marketCoins: MarketCoin[];\n  onCloseForm: () => void;\n  portfolioName: string;\n  updatePortfolioName: (newName: string) => void;\n  addNewCoinToPortfolio: (\n    newData: PortfolioCoinBasic,\n    marketCoins: MarketCoin[]\n  ) => void;\n  portfolioCoinOptions: MarketCoin[];\n  createPortfolioCoinOptions: (marketCoins: MarketCoin[]) => void;\n  portfolioCoins: PortfolioCoin[];\n  formStep: string;\n  setFormStep: any;\n}\n\nconst PortfolioForm: React.FC<Props> = ({\n  marketCoins,\n  onCloseForm,\n  portfolioName,\n  updatePortfolioName,\n  addNewCoinToPortfolio,\n  portfolioCoinOptions,\n  createPortfolioCoinOptions,\n  portfolioCoins,\n  formStep,\n  setFormStep,\n}) => {\n  const [newPortfolioName, setNewPortfolioName] = useState(portfolioName);\n  const [portfolioNameFormOpen, setPortfolioNameFormOpen] = useState(false);\n\n  const onChangePortfolioName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNewPortfolioName(e.target.value);\n  };\n\n  const onSaveNewPortfolioName = () => {\n    updatePortfolioName(newPortfolioName);\n    setPortfolioNameFormOpen(false);\n  };\n\n  const onClickPortfolioActionButton = (value: string) => {\n    setFormStep(value);\n  };\n\n  return (\n    <FormContainer>\n      <TopContainer>\n        <PortfolioNameContainer>\n          {portfolioNameFormOpen ? (\n            <>\n              <input\n                type=\"text\"\n                value={newPortfolioName}\n                onChange={onChangePortfolioName}\n              />\n              <button onClick={onSaveNewPortfolioName}>Save</button>\n            </>\n          ) : (\n            <>\n              <PortfolioName>{portfolioName}</PortfolioName>\n              <EditIconButton onClick={() => setPortfolioNameFormOpen(true)}>\n                edit icon\n              </EditIconButton>\n            </>\n          )}\n        </PortfolioNameContainer>\n        <CloseFormButton onClick={onCloseForm} />\n      </TopContainer>\n      {formStep === \"start\" && (\n        <SelectPortfolioActionsContainer>\n          <Button\n            onClick={() => onClickPortfolioActionButton(\"add-coin\")}\n            primary=\"true\"\n          >\n            <RiAddFill style={{ marginRight: \"5px\" }} /> ADD NEW COIN\n          </Button>\n          <Button\n            onClick={() => onClickPortfolioActionButton(\"edit-portfolio\")}\n            style={{ marginLeft: \"5px\" }}\n          >\n            <MdModeEdit style={{ marginRight: \"5px\" }} /> EDIT PORTFOLIO\n          </Button>\n        </SelectPortfolioActionsContainer>\n      )}\n      {formStep === \"add-coin\" && (\n        <AddOrEditCoinsForm\n          marketCoins={marketCoins}\n          onCloseForm={onCloseForm}\n          portfolioName={portfolioName}\n          updatePortfolioName={updatePortfolioName}\n          addNewCoinToPortfolio={addNewCoinToPortfolio}\n          portfolioCoinOptions={portfolioCoinOptions}\n          createPortfolioCoinOptions={createPortfolioCoinOptions}\n          portfolioCoins={portfolioCoins}\n          formStep={formStep}\n          setFormStep={setFormStep}\n        />\n      )}\n      {formStep === \"edit-portfolio\" && (\n        <AddDetailsForm>\n          <FormTitle>Edit Portfolio</FormTitle>\n          <BottomContainer>\n            <Button onClick={onCloseForm}>CANCEL</Button>\n            <Button\n              onClick={() => console.log(\"save\")}\n              style={{ marginLeft: \"10px\" }}\n              primary=\"true\"\n            >\n              SAVE\n            </Button>\n          </BottomContainer>\n        </AddDetailsForm>\n      )}\n    </FormContainer>\n  );\n};\n\nconst AddOrEditCoinsForm: React.FC<Props> = ({\n  marketCoins,\n  onCloseForm,\n  portfolioName,\n  updatePortfolioName,\n  addNewCoinToPortfolio,\n  portfolioCoinOptions,\n  createPortfolioCoinOptions,\n  portfolioCoins,\n  formStep,\n  setFormStep,\n}) => {\n  const [currency, setCurrency] = useState(\"\");\n  const [estimate, setEstimate] = useState(0);\n  const [portfolioData, setPortfolioData] = useState<PortfolioCoinBasic>({\n    name_with_symbol: \"\",\n    bought_quantity: 0,\n    bought_price_per_coin: 0,\n    cost_basis: 0,\n    total_gain_usd: 0,\n    total_gain_percentage: 0,\n    current_value: 0,\n  });\n  const [boughtWithBitcoin, setBoughtWithBitcoin] = useState({\n    btc_price_at_bought: 0,\n    btc_paid_quantity: 0,\n  });\n\n  useEffect(() => {\n    const { btc_price_at_bought, btc_paid_quantity } = boughtWithBitcoin;\n    if (btc_price_at_bought > 0 && btc_paid_quantity > 0) {\n      const costBasis = Number(btc_price_at_bought) * Number(btc_paid_quantity);\n      setEstimate(costBasis);\n      setPortfolioData((prev) => ({ ...prev, cost_basis: costBasis }));\n    }\n  }, [boughtWithBitcoin]);\n\n  useEffect(() => {\n    if (marketCoins.length > 0 && portfolioCoinOptions.length === 0)\n      createPortfolioCoinOptions(marketCoins);\n  }, [marketCoins, portfolioCoinOptions.length, createPortfolioCoinOptions]);\n\n  const updatePortfolioData = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setPortfolioData({ ...portfolioData, [e.target.name]: e.target.value });\n  };\n\n  const onSave = (e: React.MouseEvent) => {\n    e.preventDefault();\n    const { bought_quantity, cost_basis } = portfolioData;\n\n    addNewCoinToPortfolio(\n      {\n        ...portfolioData,\n        bought_quantity: Number(bought_quantity),\n        cost_basis: Number(cost_basis),\n        bought_price_per_coin: cost_basis / bought_quantity,\n      },\n      marketCoins\n    );\n    onCloseForm();\n  };\n  const onChooseCurrency = (value: string) => {\n    setCurrency(value);\n  };\n\n  const updateBoughtWithBitcoin = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setBoughtWithBitcoin({\n      ...boughtWithBitcoin,\n      [e.target.name]: e.target.value,\n    });\n  };\n  return (\n    <DetailsContainer>\n      <AddDetailsForm>\n        <FormTitle>Add New Coin</FormTitle>\n        <SearchCoinTextField\n          value={portfolioData.name_with_symbol}\n          name=\"name_with_symbol\"\n          handleChange={updatePortfolioData}\n          coins={portfolioCoinOptions}\n          hasLabel\n        />\n        <TextFieldWithLabel\n          label=\"Quantity\"\n          name=\"bought_quantity\"\n          placeholder=\"How many coins do you have?\"\n          value={portfolioData.bought_quantity}\n          handleChange={updatePortfolioData}\n        />\n\n        {portfolioData.name_with_symbol === \"Bitcoin (BTC)\" && (\n          <TextFieldWithLabel\n            label=\"Total Cost ($)\"\n            name=\"cost_basis\"\n            placeholder=\"Price you paid for this transaction\"\n            value={portfolioData.cost_basis}\n            handleChange={updatePortfolioData}\n          />\n        )}\n\n        {portfolioData.name_with_symbol &&\n          portfolioData.name_with_symbol !== \"Bitcoin (BTC)\" && (\n            <CurrencyRadioButtons onChooseCurrency={onChooseCurrency} />\n          )}\n\n        {portfolioData.name_with_symbol !== \"Bitcoin (BTC)\" &&\n        currency &&\n        currency === \"USD\" ? (\n          <TextFieldWithLabel\n            label=\"Total Cost ($)\"\n            name=\"cost_basis\"\n            placeholder=\"Price you paid for this transaction\"\n            value={portfolioData.cost_basis}\n            handleChange={updatePortfolioData}\n          />\n        ) : currency === \"BTC\" ? (\n          <>\n            <TextFieldWithLabel\n              label=\"Bitcoin Price ($)\"\n              name=\"btc_price_at_bought\"\n              placeholder=\"BTC price when bought this coin\"\n              value={boughtWithBitcoin.btc_price_at_bought}\n              handleChange={updateBoughtWithBitcoin}\n            />\n            <TextFieldWithLabel\n              label=\"Total Bitcoin Paid (₿)\"\n              name=\"btc_paid_quantity\"\n              placeholder=\"BTC quantity spent on this transaction\"\n              value={boughtWithBitcoin.btc_paid_quantity}\n              handleChange={updateBoughtWithBitcoin}\n            />\n            {estimate > 0 && (\n              <p\n                style={{\n                  width: \"250px\",\n                  alignSelf: \"start\",\n                  fontSize: \"13px\",\n                }}\n              >\n                estimate total cost basis ~ ${estimate}\n              </p>\n            )}\n          </>\n        ) : null}\n      </AddDetailsForm>\n      <BottomContainer>\n        <Button onClick={onCloseForm}>CANCEL</Button>\n        <Button onClick={onSave} style={{ marginLeft: \"10px\" }} primary=\"true\">\n          SAVE\n        </Button>\n      </BottomContainer>\n    </DetailsContainer>\n  );\n};\n\nexport default PortfolioForm;\n","import React from \"react\";\n\nimport {\n  Wrapper,\n  Table,\n  TableHeadRow,\n  TableHeadData,\n  TableBodyRow,\n  TableBodyData,\n  Ticker,\n  CoinImg,\n  CoinNameWrapper,\n} from \"../CryptoTable/CryptoTable.styled\";\nimport { PortfolioCoin } from \"../../types/coins\";\ninterface Props {\n  coins: PortfolioCoin[];\n}\n\nconst PortfolioTable: React.FC<Props> = ({ coins }) => {\n  return (\n    <Wrapper>\n      <Table cellSpacing=\"0\" cellPadding=\"0\">\n        <thead>\n          <TableHeadRow>\n            <TableHeadData align=\"center\">Rank</TableHeadData>\n            <TableHeadData align=\"left\">Name</TableHeadData>\n            <TableHeadData align=\"right\">Quantity</TableHeadData>\n            <TableHeadData align=\"right\">Price Paid (coin)</TableHeadData>\n            <TableHeadData align=\"right\">Cost Basis</TableHeadData>\n            <TableHeadData align=\"right\">Current Price (coin)</TableHeadData>\n            <TableHeadData align=\"right\">Current Value</TableHeadData>\n            <TableHeadData align=\"right\">24h %</TableHeadData>\n\n            <TableHeadData align=\"right\">Total Gain</TableHeadData>\n          </TableHeadRow>\n        </thead>\n        <tbody>\n          {coins.map((coin) => (\n            <TableBodyRow key={coin.id}>\n              <TableBodyData align=\"center\">\n                {coin.market_cap_rank}\n              </TableBodyData>\n              <TableBodyData align=\"left\">\n                <CoinNameWrapper>\n                  <CoinImg src={coin.image} alt={coin.name} />\n                  {coin.name} <Ticker>{coin.symbol}</Ticker>\n                </CoinNameWrapper>\n              </TableBodyData>\n              <TableBodyData align=\"right\">\n                {coin.bought_quantity.toLocaleString()}\n              </TableBodyData>\n              <TableBodyData align=\"right\">\n                $\n                {coin.bought_price_per_coin < 0\n                  ? coin.bought_price_per_coin.toFixed(6)\n                  : coin.bought_price_per_coin.toLocaleString()}\n              </TableBodyData>\n              <TableBodyData align=\"right\">\n                ${coin.cost_basis.toLocaleString()}\n              </TableBodyData>\n              <TableBodyData align=\"right\">\n                ${coin.current_price.toLocaleString()}\n              </TableBodyData>\n              <TableBodyData align=\"right\">\n                ${coin.current_value.toLocaleString()}\n              </TableBodyData>\n              <TableBodyData\n                align=\"right\"\n                change={\n                  coin.price_change_percentage_24h > 0\n                    ? \"positive\"\n                    : coin.price_change_percentage_24h < 0\n                    ? \"negative\"\n                    : \"\"\n                }\n              >\n                {coin.price_change_percentage_24h.toFixed(2)}%\n              </TableBodyData>\n              <TableBodyData\n                align=\"right\"\n                change={\n                  coin.total_gain_usd > 0\n                    ? \"positive\"\n                    : coin.total_gain_usd < 0\n                    ? \"negative\"\n                    : \"\"\n                }\n              >\n                {coin.total_gain_usd < 0\n                  ? `-$${coin.total_gain_usd.toLocaleString().substring(1)}`\n                  : `$${coin.total_gain_usd.toLocaleString()}`}\n              </TableBodyData>\n            </TableBodyRow>\n          ))}\n        </tbody>\n      </Table>\n    </Wrapper>\n  );\n};\n\nexport default PortfolioTable;\n","import { useState } from \"react\";\nimport { MarketCoin } from \"../../types/coins\";\nimport { PortfolioContainer } from \"./EachPortfolio.styled\";\nimport { HeaderWrapper, Button, TableName } from \"../../styles/globalStyles\";\nimport PortfolioForm from \"../PortfolioForm\";\nimport { PortfolioCoinBasic, PortfolioCoin } from \"../../types/coins\";\nimport PortfolioTable from \"../PortfolioTable\";\ninterface Props {\n  marketCoins: MarketCoin[];\n  portfolioFormOpen: boolean;\n  onClickOpenPortfolioForm: () => void;\n  onClickClosePortfolioForm: () => void;\n  portfolioName: string;\n  updatePortfolioName: (newName: string) => void;\n  portfolioCoins: PortfolioCoin[];\n  addNewCoinToPortfolio: (\n    newCoin: PortfolioCoinBasic,\n    marketCoins: MarketCoin[]\n  ) => void;\n  portfolioCoinOptions: MarketCoin[];\n  createPortfolioCoinOptions: (marketCoins: MarketCoin[]) => void;\n}\n\nconst EachPortfolio: React.FC<Props> = ({\n  marketCoins,\n  portfolioName,\n  updatePortfolioName,\n  portfolioCoins,\n  addNewCoinToPortfolio,\n  portfolioFormOpen,\n  onClickOpenPortfolioForm,\n  onClickClosePortfolioForm,\n  portfolioCoinOptions,\n  createPortfolioCoinOptions,\n}) => {\n  const [formStep, setFormStep] = useState(\"start\");\n  const onClickEditPortfolio = () => {\n    setFormStep(\"start\");\n    onClickOpenPortfolioForm();\n  };\n  const onClickAddCoins = () => {\n    setFormStep(\"add-coin\");\n    onClickOpenPortfolioForm();\n  };\n  return (\n    <PortfolioContainer>\n      <HeaderWrapper>\n        <TableName>{portfolioName}</TableName>\n        {!portfolioFormOpen && portfolioCoins.length > 0 ? (\n          <Button onClick={onClickEditPortfolio}>EDIT PORTFOLIO</Button>\n        ) : (\n          !portfolioFormOpen && (\n            <Button onClick={onClickAddCoins}>+ADD COINS</Button>\n          )\n        )}\n      </HeaderWrapper>\n      {portfolioFormOpen && (\n        <PortfolioForm\n          marketCoins={marketCoins}\n          onCloseForm={onClickClosePortfolioForm}\n          portfolioName={portfolioName}\n          updatePortfolioName={updatePortfolioName}\n          addNewCoinToPortfolio={addNewCoinToPortfolio}\n          portfolioCoinOptions={portfolioCoinOptions}\n          createPortfolioCoinOptions={createPortfolioCoinOptions}\n          portfolioCoins={portfolioCoins}\n          formStep={formStep}\n          setFormStep={setFormStep}\n        />\n      )}\n\n      {portfolioCoins.length > 0 && !portfolioFormOpen && (\n        <PortfolioTable coins={portfolioCoins} />\n      )}\n    </PortfolioContainer>\n  );\n};\n\nexport default EachPortfolio;\n","import { useState, useContext, createContext } from \"react\";\nimport {\n  MarketCoin,\n  PortfolioCoin,\n  PortfolioCoinBasic,\n} from \"../../types/coins\";\nimport { PortfolioContextData } from \"../../types/context\";\nimport { getCoinSymbol } from \"../../utils/helpers\";\nimport {\n  addCoinToCoinOptions,\n  removeCoinFromCoinOptions,\n  isValidatedValue,\n} from \"../contextHelpers\";\n\nconst portfolioDefaultValues = {\n  portfolioFormOpen: false,\n  onClickOpenPortfolioForm: () => null,\n  onClickClosePortfolioForm: () => null,\n  portfolioName: \"\",\n  updatePortfolioName: () => null,\n  portfolioCoins: [],\n  addNewCoinToPortfolio: () => null,\n  portfolioCoinOptions: [],\n  createPortfolioCoinOptions: () => null,\n};\n\nexport const PortfolioContext = createContext<PortfolioContextData>(\n  portfolioDefaultValues\n);\n\nexport const usePortfolio = () => {\n  return useContext(PortfolioContext);\n};\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const PortfolioProvider: React.FC<Props> = ({ children }) => {\n  const [portfolioFormOpen, setPortfolioFormOpen] = useState(false);\n  const [portfolioName, setPortfolioName] = useState(\"My Portfolio\");\n  const [portfolioCoins, setPortfolioCoins] = useState<PortfolioCoin[]>([]);\n  const [portfolioCoinOptions, setPortfolioCoinOptions] = useState<\n    MarketCoin[]\n  >([]);\n\n  const onClickOpenPortfolioForm = () => {\n    setPortfolioFormOpen(true);\n  };\n  const onClickClosePortfolioForm = () => {\n    setPortfolioFormOpen(false);\n  };\n\n  const updatePortfolioName = (newName: string) => {\n    setPortfolioName(newName);\n  };\n\n  const addNewCoinToPortfolio = (\n    newCoin: PortfolioCoinBasic,\n    marketCoins: MarketCoin[]\n  ) => {\n    if (newCoin.name_with_symbol.length > 0) {\n      const coinSymbol = getCoinSymbol(newCoin.name_with_symbol);\n      if (isValidatedValue(portfolioCoinOptions, coinSymbol)) {\n        let myCoin: PortfolioCoin;\n        const { bought_price_per_coin, bought_quantity } = newCoin;\n        for (let i = 0; i < marketCoins.length; i++) {\n          if (marketCoins[i].symbol === coinSymbol) {\n            const gainUSD =\n              (marketCoins[i].current_price - bought_price_per_coin) *\n              bought_quantity;\n            const gainPercentage =\n              ((marketCoins[i].current_price - bought_price_per_coin) /\n                bought_price_per_coin) *\n              100;\n            const currentValue = marketCoins[i].current_price * bought_quantity;\n            myCoin = {\n              ...marketCoins[i],\n              ...newCoin,\n              total_gain_usd: gainUSD,\n              total_gain_percentage: gainPercentage,\n              current_value: currentValue,\n            };\n            setPortfolioCoins([...portfolioCoins, myCoin]);\n            removeCoinFromCoinOptions(coinSymbol, setPortfolioCoinOptions);\n            break;\n          }\n        }\n      } else {\n        alert(\"This coin is not available\");\n      }\n    }\n  };\n  const createPortfolioCoinOptions = (marketCoins: MarketCoin[]) => {\n    setPortfolioCoinOptions(marketCoins);\n  };\n\n  return (\n    <PortfolioContext.Provider\n      value={{\n        portfolioFormOpen,\n        onClickOpenPortfolioForm,\n        onClickClosePortfolioForm,\n        portfolioName,\n        updatePortfolioName,\n        portfolioCoins,\n        addNewCoinToPortfolio,\n        portfolioCoinOptions,\n        createPortfolioCoinOptions,\n      }}\n    >\n      {children}\n    </PortfolioContext.Provider>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { Container, PageTitle } from \"../../styles/globalStyles\";\nimport EachPortfolio from \"../../components/EachPortfolio\";\nimport { MarketCoinsContext } from \"../../context/MarketCoins/MarketCoinsContext\";\nimport { usePortfolio } from \"../../context/Portfolio/PortfolioContext\";\n\nconst Portfolio = () => {\n  const { marketCoins, fetchMarketCoins } = useContext(MarketCoinsContext);\n  useEffect(() => {\n    if (marketCoins.length === 0) fetchMarketCoins();\n  }, [fetchMarketCoins, marketCoins]);\n\n  const {\n    portfolioName,\n    updatePortfolioName,\n    portfolioFormOpen,\n    onClickOpenPortfolioForm,\n    onClickClosePortfolioForm,\n    portfolioCoins,\n    addNewCoinToPortfolio,\n    portfolioCoinOptions,\n    createPortfolioCoinOptions,\n  } = usePortfolio();\n  return (\n    <Container>\n      <PageTitle>Portfolio</PageTitle>\n      <EachPortfolio\n        marketCoins={marketCoins}\n        portfolioName={portfolioName}\n        updatePortfolioName={updatePortfolioName}\n        portfolioCoins={portfolioCoins}\n        addNewCoinToPortfolio={addNewCoinToPortfolio}\n        portfolioFormOpen={portfolioFormOpen}\n        onClickOpenPortfolioForm={onClickOpenPortfolioForm}\n        onClickClosePortfolioForm={onClickClosePortfolioForm}\n        portfolioCoinOptions={portfolioCoinOptions}\n        createPortfolioCoinOptions={createPortfolioCoinOptions}\n      />\n    </Container>\n  );\n};\n\nexport default Portfolio;\n","import { AppContainer } from \"./App.styled\";\nimport NavBar from \"./components/NavBar\";\nimport GlobalStyle from \"./styles/globalStyles\";\nimport Home from \"./pages/Home\";\nimport WatchList from \"./pages/WatchList\";\nimport Portfolio from \"./pages/Portfolio\";\nimport { WatchListProvider } from \"./context/WatchList/WatchListContext\";\nimport { PortfolioProvider } from \"./context/Portfolio/PortfolioContext\";\nimport { MarketCoinsProvider } from \"./context/MarketCoins/MarketCoinsContext\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <MarketCoinsProvider>\n        <WatchListProvider>\n          <PortfolioProvider>\n            <AppContainer>\n              <GlobalStyle />\n              <NavBar />\n              <Switch>\n                <Route path=\"/crypto-folio\" exact component={Home} />\n                <Route\n                  path=\"/crypto-folio/watchlist\"\n                  exact\n                  component={WatchList}\n                />\n                <Route\n                  path=\"/crypto-folio/portfolio\"\n                  exact\n                  component={Portfolio}\n                />\n              </Switch>\n            </AppContainer>\n          </PortfolioProvider>\n        </WatchListProvider>\n      </MarketCoinsProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}